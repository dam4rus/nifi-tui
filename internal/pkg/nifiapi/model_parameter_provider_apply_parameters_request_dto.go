/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
	"time"
)

// checks if the ParameterProviderApplyParametersRequestDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterProviderApplyParametersRequestDTO{}

// ParameterProviderApplyParametersRequestDTO struct for ParameterProviderApplyParametersRequestDTO
type ParameterProviderApplyParametersRequestDTO struct {
	// The ID of the request
	RequestId *string `json:"requestId,omitempty"`
	// The URI for the request
	Uri *string `json:"uri,omitempty"`
	// The timestamp of when the request was submitted
	SubmissionTime *time.Time `json:"submissionTime,omitempty"`
	// The timestamp of when the request was last updated
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// Whether or not the request is completed
	Complete *bool `json:"complete,omitempty"`
	// The reason for the request failing, or null if the request has not failed
	FailureReason *string `json:"failureReason,omitempty"`
	// A value between 0 and 100 (inclusive) indicating how close the request is to completion
	PercentCompleted *int32 `json:"percentCompleted,omitempty"`
	// A description of the current state of the request
	State *string `json:"state,omitempty"`
	// The steps that are required in order to complete the request, along with the status of each
	UpdateSteps []ParameterProviderApplyParametersUpdateStepDTO `json:"updateSteps,omitempty"`
	ParameterProvider *ParameterProviderDTO `json:"parameterProvider,omitempty"`
	// The Parameter Contexts updated by this Parameter Provider. This may not be populated until the request has successfully completed.
	ParameterContextUpdates []ParameterContextUpdateEntity `json:"parameterContextUpdates,omitempty"`
	// The components that are referenced by the update.
	ReferencingComponents []AffectedComponentEntity `json:"referencingComponents,omitempty"`
}

// NewParameterProviderApplyParametersRequestDTO instantiates a new ParameterProviderApplyParametersRequestDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterProviderApplyParametersRequestDTO() *ParameterProviderApplyParametersRequestDTO {
	this := ParameterProviderApplyParametersRequestDTO{}
	return &this
}

// NewParameterProviderApplyParametersRequestDTOWithDefaults instantiates a new ParameterProviderApplyParametersRequestDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterProviderApplyParametersRequestDTOWithDefaults() *ParameterProviderApplyParametersRequestDTO {
	this := ParameterProviderApplyParametersRequestDTO{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ParameterProviderApplyParametersRequestDTO) SetRequestId(v string) {
	o.RequestId = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *ParameterProviderApplyParametersRequestDTO) SetUri(v string) {
	o.Uri = &v
}

// GetSubmissionTime returns the SubmissionTime field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetSubmissionTime() time.Time {
	if o == nil || IsNil(o.SubmissionTime) {
		var ret time.Time
		return ret
	}
	return *o.SubmissionTime
}

// GetSubmissionTimeOk returns a tuple with the SubmissionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetSubmissionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SubmissionTime) {
		return nil, false
	}
	return o.SubmissionTime, true
}

// HasSubmissionTime returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasSubmissionTime() bool {
	if o != nil && !IsNil(o.SubmissionTime) {
		return true
	}

	return false
}

// SetSubmissionTime gets a reference to the given time.Time and assigns it to the SubmissionTime field.
func (o *ParameterProviderApplyParametersRequestDTO) SetSubmissionTime(v time.Time) {
	o.SubmissionTime = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ParameterProviderApplyParametersRequestDTO) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetComplete() bool {
	if o == nil || IsNil(o.Complete) {
		var ret bool
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Complete) {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasComplete() bool {
	if o != nil && !IsNil(o.Complete) {
		return true
	}

	return false
}

// SetComplete gets a reference to the given bool and assigns it to the Complete field.
func (o *ParameterProviderApplyParametersRequestDTO) SetComplete(v bool) {
	o.Complete = &v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *ParameterProviderApplyParametersRequestDTO) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetPercentCompleted returns the PercentCompleted field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetPercentCompleted() int32 {
	if o == nil || IsNil(o.PercentCompleted) {
		var ret int32
		return ret
	}
	return *o.PercentCompleted
}

// GetPercentCompletedOk returns a tuple with the PercentCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetPercentCompletedOk() (*int32, bool) {
	if o == nil || IsNil(o.PercentCompleted) {
		return nil, false
	}
	return o.PercentCompleted, true
}

// HasPercentCompleted returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasPercentCompleted() bool {
	if o != nil && !IsNil(o.PercentCompleted) {
		return true
	}

	return false
}

// SetPercentCompleted gets a reference to the given int32 and assigns it to the PercentCompleted field.
func (o *ParameterProviderApplyParametersRequestDTO) SetPercentCompleted(v int32) {
	o.PercentCompleted = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ParameterProviderApplyParametersRequestDTO) SetState(v string) {
	o.State = &v
}

// GetUpdateSteps returns the UpdateSteps field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetUpdateSteps() []ParameterProviderApplyParametersUpdateStepDTO {
	if o == nil || IsNil(o.UpdateSteps) {
		var ret []ParameterProviderApplyParametersUpdateStepDTO
		return ret
	}
	return o.UpdateSteps
}

// GetUpdateStepsOk returns a tuple with the UpdateSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetUpdateStepsOk() ([]ParameterProviderApplyParametersUpdateStepDTO, bool) {
	if o == nil || IsNil(o.UpdateSteps) {
		return nil, false
	}
	return o.UpdateSteps, true
}

// HasUpdateSteps returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasUpdateSteps() bool {
	if o != nil && !IsNil(o.UpdateSteps) {
		return true
	}

	return false
}

// SetUpdateSteps gets a reference to the given []ParameterProviderApplyParametersUpdateStepDTO and assigns it to the UpdateSteps field.
func (o *ParameterProviderApplyParametersRequestDTO) SetUpdateSteps(v []ParameterProviderApplyParametersUpdateStepDTO) {
	o.UpdateSteps = v
}

// GetParameterProvider returns the ParameterProvider field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetParameterProvider() ParameterProviderDTO {
	if o == nil || IsNil(o.ParameterProvider) {
		var ret ParameterProviderDTO
		return ret
	}
	return *o.ParameterProvider
}

// GetParameterProviderOk returns a tuple with the ParameterProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetParameterProviderOk() (*ParameterProviderDTO, bool) {
	if o == nil || IsNil(o.ParameterProvider) {
		return nil, false
	}
	return o.ParameterProvider, true
}

// HasParameterProvider returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasParameterProvider() bool {
	if o != nil && !IsNil(o.ParameterProvider) {
		return true
	}

	return false
}

// SetParameterProvider gets a reference to the given ParameterProviderDTO and assigns it to the ParameterProvider field.
func (o *ParameterProviderApplyParametersRequestDTO) SetParameterProvider(v ParameterProviderDTO) {
	o.ParameterProvider = &v
}

// GetParameterContextUpdates returns the ParameterContextUpdates field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetParameterContextUpdates() []ParameterContextUpdateEntity {
	if o == nil || IsNil(o.ParameterContextUpdates) {
		var ret []ParameterContextUpdateEntity
		return ret
	}
	return o.ParameterContextUpdates
}

// GetParameterContextUpdatesOk returns a tuple with the ParameterContextUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetParameterContextUpdatesOk() ([]ParameterContextUpdateEntity, bool) {
	if o == nil || IsNil(o.ParameterContextUpdates) {
		return nil, false
	}
	return o.ParameterContextUpdates, true
}

// HasParameterContextUpdates returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasParameterContextUpdates() bool {
	if o != nil && !IsNil(o.ParameterContextUpdates) {
		return true
	}

	return false
}

// SetParameterContextUpdates gets a reference to the given []ParameterContextUpdateEntity and assigns it to the ParameterContextUpdates field.
func (o *ParameterProviderApplyParametersRequestDTO) SetParameterContextUpdates(v []ParameterContextUpdateEntity) {
	o.ParameterContextUpdates = v
}

// GetReferencingComponents returns the ReferencingComponents field value if set, zero value otherwise.
func (o *ParameterProviderApplyParametersRequestDTO) GetReferencingComponents() []AffectedComponentEntity {
	if o == nil || IsNil(o.ReferencingComponents) {
		var ret []AffectedComponentEntity
		return ret
	}
	return o.ReferencingComponents
}

// GetReferencingComponentsOk returns a tuple with the ReferencingComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderApplyParametersRequestDTO) GetReferencingComponentsOk() ([]AffectedComponentEntity, bool) {
	if o == nil || IsNil(o.ReferencingComponents) {
		return nil, false
	}
	return o.ReferencingComponents, true
}

// HasReferencingComponents returns a boolean if a field has been set.
func (o *ParameterProviderApplyParametersRequestDTO) HasReferencingComponents() bool {
	if o != nil && !IsNil(o.ReferencingComponents) {
		return true
	}

	return false
}

// SetReferencingComponents gets a reference to the given []AffectedComponentEntity and assigns it to the ReferencingComponents field.
func (o *ParameterProviderApplyParametersRequestDTO) SetReferencingComponents(v []AffectedComponentEntity) {
	o.ReferencingComponents = v
}

func (o ParameterProviderApplyParametersRequestDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterProviderApplyParametersRequestDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.SubmissionTime) {
		toSerialize["submissionTime"] = o.SubmissionTime
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Complete) {
		toSerialize["complete"] = o.Complete
	}
	if !IsNil(o.FailureReason) {
		toSerialize["failureReason"] = o.FailureReason
	}
	if !IsNil(o.PercentCompleted) {
		toSerialize["percentCompleted"] = o.PercentCompleted
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.UpdateSteps) {
		toSerialize["updateSteps"] = o.UpdateSteps
	}
	if !IsNil(o.ParameterProvider) {
		toSerialize["parameterProvider"] = o.ParameterProvider
	}
	if !IsNil(o.ParameterContextUpdates) {
		toSerialize["parameterContextUpdates"] = o.ParameterContextUpdates
	}
	if !IsNil(o.ReferencingComponents) {
		toSerialize["referencingComponents"] = o.ReferencingComponents
	}
	return toSerialize, nil
}

type NullableParameterProviderApplyParametersRequestDTO struct {
	value *ParameterProviderApplyParametersRequestDTO
	isSet bool
}

func (v NullableParameterProviderApplyParametersRequestDTO) Get() *ParameterProviderApplyParametersRequestDTO {
	return v.value
}

func (v *NullableParameterProviderApplyParametersRequestDTO) Set(val *ParameterProviderApplyParametersRequestDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterProviderApplyParametersRequestDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterProviderApplyParametersRequestDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterProviderApplyParametersRequestDTO(val *ParameterProviderApplyParametersRequestDTO) *NullableParameterProviderApplyParametersRequestDTO {
	return &NullableParameterProviderApplyParametersRequestDTO{value: val, isSet: true}
}

func (v NullableParameterProviderApplyParametersRequestDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterProviderApplyParametersRequestDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



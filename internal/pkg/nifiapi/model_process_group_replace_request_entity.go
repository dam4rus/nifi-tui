/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the ProcessGroupReplaceRequestEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessGroupReplaceRequestEntity{}

// ProcessGroupReplaceRequestEntity struct for ProcessGroupReplaceRequestEntity
type ProcessGroupReplaceRequestEntity struct {
	ProcessGroupRevision *RevisionDTO `json:"processGroupRevision,omitempty"`
	Request *ProcessGroupReplaceRequestDTO `json:"request,omitempty"`
	VersionedFlowSnapshot *RegisteredFlowSnapshot `json:"versionedFlowSnapshot,omitempty"`
}

// NewProcessGroupReplaceRequestEntity instantiates a new ProcessGroupReplaceRequestEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessGroupReplaceRequestEntity() *ProcessGroupReplaceRequestEntity {
	this := ProcessGroupReplaceRequestEntity{}
	return &this
}

// NewProcessGroupReplaceRequestEntityWithDefaults instantiates a new ProcessGroupReplaceRequestEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessGroupReplaceRequestEntityWithDefaults() *ProcessGroupReplaceRequestEntity {
	this := ProcessGroupReplaceRequestEntity{}
	return &this
}

// GetProcessGroupRevision returns the ProcessGroupRevision field value if set, zero value otherwise.
func (o *ProcessGroupReplaceRequestEntity) GetProcessGroupRevision() RevisionDTO {
	if o == nil || IsNil(o.ProcessGroupRevision) {
		var ret RevisionDTO
		return ret
	}
	return *o.ProcessGroupRevision
}

// GetProcessGroupRevisionOk returns a tuple with the ProcessGroupRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupReplaceRequestEntity) GetProcessGroupRevisionOk() (*RevisionDTO, bool) {
	if o == nil || IsNil(o.ProcessGroupRevision) {
		return nil, false
	}
	return o.ProcessGroupRevision, true
}

// HasProcessGroupRevision returns a boolean if a field has been set.
func (o *ProcessGroupReplaceRequestEntity) HasProcessGroupRevision() bool {
	if o != nil && !IsNil(o.ProcessGroupRevision) {
		return true
	}

	return false
}

// SetProcessGroupRevision gets a reference to the given RevisionDTO and assigns it to the ProcessGroupRevision field.
func (o *ProcessGroupReplaceRequestEntity) SetProcessGroupRevision(v RevisionDTO) {
	o.ProcessGroupRevision = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ProcessGroupReplaceRequestEntity) GetRequest() ProcessGroupReplaceRequestDTO {
	if o == nil || IsNil(o.Request) {
		var ret ProcessGroupReplaceRequestDTO
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupReplaceRequestEntity) GetRequestOk() (*ProcessGroupReplaceRequestDTO, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ProcessGroupReplaceRequestEntity) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given ProcessGroupReplaceRequestDTO and assigns it to the Request field.
func (o *ProcessGroupReplaceRequestEntity) SetRequest(v ProcessGroupReplaceRequestDTO) {
	o.Request = &v
}

// GetVersionedFlowSnapshot returns the VersionedFlowSnapshot field value if set, zero value otherwise.
func (o *ProcessGroupReplaceRequestEntity) GetVersionedFlowSnapshot() RegisteredFlowSnapshot {
	if o == nil || IsNil(o.VersionedFlowSnapshot) {
		var ret RegisteredFlowSnapshot
		return ret
	}
	return *o.VersionedFlowSnapshot
}

// GetVersionedFlowSnapshotOk returns a tuple with the VersionedFlowSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupReplaceRequestEntity) GetVersionedFlowSnapshotOk() (*RegisteredFlowSnapshot, bool) {
	if o == nil || IsNil(o.VersionedFlowSnapshot) {
		return nil, false
	}
	return o.VersionedFlowSnapshot, true
}

// HasVersionedFlowSnapshot returns a boolean if a field has been set.
func (o *ProcessGroupReplaceRequestEntity) HasVersionedFlowSnapshot() bool {
	if o != nil && !IsNil(o.VersionedFlowSnapshot) {
		return true
	}

	return false
}

// SetVersionedFlowSnapshot gets a reference to the given RegisteredFlowSnapshot and assigns it to the VersionedFlowSnapshot field.
func (o *ProcessGroupReplaceRequestEntity) SetVersionedFlowSnapshot(v RegisteredFlowSnapshot) {
	o.VersionedFlowSnapshot = &v
}

func (o ProcessGroupReplaceRequestEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessGroupReplaceRequestEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProcessGroupRevision) {
		toSerialize["processGroupRevision"] = o.ProcessGroupRevision
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.VersionedFlowSnapshot) {
		toSerialize["versionedFlowSnapshot"] = o.VersionedFlowSnapshot
	}
	return toSerialize, nil
}

type NullableProcessGroupReplaceRequestEntity struct {
	value *ProcessGroupReplaceRequestEntity
	isSet bool
}

func (v NullableProcessGroupReplaceRequestEntity) Get() *ProcessGroupReplaceRequestEntity {
	return v.value
}

func (v *NullableProcessGroupReplaceRequestEntity) Set(val *ProcessGroupReplaceRequestEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessGroupReplaceRequestEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessGroupReplaceRequestEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessGroupReplaceRequestEntity(val *ProcessGroupReplaceRequestEntity) *NullableProcessGroupReplaceRequestEntity {
	return &NullableProcessGroupReplaceRequestEntity{value: val, isSet: true}
}

func (v NullableProcessGroupReplaceRequestEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessGroupReplaceRequestEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



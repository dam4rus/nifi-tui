/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the ProcessorsRunStatusDetailsEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessorsRunStatusDetailsEntity{}

// ProcessorsRunStatusDetailsEntity struct for ProcessorsRunStatusDetailsEntity
type ProcessorsRunStatusDetailsEntity struct {
	RunStatusDetails []ProcessorRunStatusDetailsEntity `json:"runStatusDetails,omitempty"`
}

// NewProcessorsRunStatusDetailsEntity instantiates a new ProcessorsRunStatusDetailsEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessorsRunStatusDetailsEntity() *ProcessorsRunStatusDetailsEntity {
	this := ProcessorsRunStatusDetailsEntity{}
	return &this
}

// NewProcessorsRunStatusDetailsEntityWithDefaults instantiates a new ProcessorsRunStatusDetailsEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessorsRunStatusDetailsEntityWithDefaults() *ProcessorsRunStatusDetailsEntity {
	this := ProcessorsRunStatusDetailsEntity{}
	return &this
}

// GetRunStatusDetails returns the RunStatusDetails field value if set, zero value otherwise.
func (o *ProcessorsRunStatusDetailsEntity) GetRunStatusDetails() []ProcessorRunStatusDetailsEntity {
	if o == nil || IsNil(o.RunStatusDetails) {
		var ret []ProcessorRunStatusDetailsEntity
		return ret
	}
	return o.RunStatusDetails
}

// GetRunStatusDetailsOk returns a tuple with the RunStatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessorsRunStatusDetailsEntity) GetRunStatusDetailsOk() ([]ProcessorRunStatusDetailsEntity, bool) {
	if o == nil || IsNil(o.RunStatusDetails) {
		return nil, false
	}
	return o.RunStatusDetails, true
}

// HasRunStatusDetails returns a boolean if a field has been set.
func (o *ProcessorsRunStatusDetailsEntity) HasRunStatusDetails() bool {
	if o != nil && !IsNil(o.RunStatusDetails) {
		return true
	}

	return false
}

// SetRunStatusDetails gets a reference to the given []ProcessorRunStatusDetailsEntity and assigns it to the RunStatusDetails field.
func (o *ProcessorsRunStatusDetailsEntity) SetRunStatusDetails(v []ProcessorRunStatusDetailsEntity) {
	o.RunStatusDetails = v
}

func (o ProcessorsRunStatusDetailsEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessorsRunStatusDetailsEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RunStatusDetails) {
		toSerialize["runStatusDetails"] = o.RunStatusDetails
	}
	return toSerialize, nil
}

type NullableProcessorsRunStatusDetailsEntity struct {
	value *ProcessorsRunStatusDetailsEntity
	isSet bool
}

func (v NullableProcessorsRunStatusDetailsEntity) Get() *ProcessorsRunStatusDetailsEntity {
	return v.value
}

func (v *NullableProcessorsRunStatusDetailsEntity) Set(val *ProcessorsRunStatusDetailsEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessorsRunStatusDetailsEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessorsRunStatusDetailsEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessorsRunStatusDetailsEntity(val *ProcessorsRunStatusDetailsEntity) *NullableProcessorsRunStatusDetailsEntity {
	return &NullableProcessorsRunStatusDetailsEntity{value: val, isSet: true}
}

func (v NullableProcessorsRunStatusDetailsEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessorsRunStatusDetailsEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



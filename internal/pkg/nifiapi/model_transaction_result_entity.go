/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the TransactionResultEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionResultEntity{}

// TransactionResultEntity struct for TransactionResultEntity
type TransactionResultEntity struct {
	FlowFileSent *int32 `json:"flowFileSent,omitempty"`
	ResponseCode *int32 `json:"responseCode,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewTransactionResultEntity instantiates a new TransactionResultEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResultEntity() *TransactionResultEntity {
	this := TransactionResultEntity{}
	return &this
}

// NewTransactionResultEntityWithDefaults instantiates a new TransactionResultEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResultEntityWithDefaults() *TransactionResultEntity {
	this := TransactionResultEntity{}
	return &this
}

// GetFlowFileSent returns the FlowFileSent field value if set, zero value otherwise.
func (o *TransactionResultEntity) GetFlowFileSent() int32 {
	if o == nil || IsNil(o.FlowFileSent) {
		var ret int32
		return ret
	}
	return *o.FlowFileSent
}

// GetFlowFileSentOk returns a tuple with the FlowFileSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResultEntity) GetFlowFileSentOk() (*int32, bool) {
	if o == nil || IsNil(o.FlowFileSent) {
		return nil, false
	}
	return o.FlowFileSent, true
}

// HasFlowFileSent returns a boolean if a field has been set.
func (o *TransactionResultEntity) HasFlowFileSent() bool {
	if o != nil && !IsNil(o.FlowFileSent) {
		return true
	}

	return false
}

// SetFlowFileSent gets a reference to the given int32 and assigns it to the FlowFileSent field.
func (o *TransactionResultEntity) SetFlowFileSent(v int32) {
	o.FlowFileSent = &v
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise.
func (o *TransactionResultEntity) GetResponseCode() int32 {
	if o == nil || IsNil(o.ResponseCode) {
		var ret int32
		return ret
	}
	return *o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResultEntity) GetResponseCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ResponseCode) {
		return nil, false
	}
	return o.ResponseCode, true
}

// HasResponseCode returns a boolean if a field has been set.
func (o *TransactionResultEntity) HasResponseCode() bool {
	if o != nil && !IsNil(o.ResponseCode) {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given int32 and assigns it to the ResponseCode field.
func (o *TransactionResultEntity) SetResponseCode(v int32) {
	o.ResponseCode = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TransactionResultEntity) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionResultEntity) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TransactionResultEntity) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TransactionResultEntity) SetMessage(v string) {
	o.Message = &v
}

func (o TransactionResultEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionResultEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FlowFileSent) {
		toSerialize["flowFileSent"] = o.FlowFileSent
	}
	if !IsNil(o.ResponseCode) {
		toSerialize["responseCode"] = o.ResponseCode
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableTransactionResultEntity struct {
	value *TransactionResultEntity
	isSet bool
}

func (v NullableTransactionResultEntity) Get() *TransactionResultEntity {
	return v.value
}

func (v *NullableTransactionResultEntity) Set(val *TransactionResultEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResultEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResultEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResultEntity(val *TransactionResultEntity) *NullableTransactionResultEntity {
	return &NullableTransactionResultEntity{value: val, isSet: true}
}

func (v NullableTransactionResultEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResultEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the ParameterProviderConfigurationDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterProviderConfigurationDTO{}

// ParameterProviderConfigurationDTO struct for ParameterProviderConfigurationDTO
type ParameterProviderConfigurationDTO struct {
	// The ID of the Parameter Provider
	ParameterProviderId *string `json:"parameterProviderId,omitempty"`
	// The name of the Parameter Provider
	ParameterProviderName *string `json:"parameterProviderName,omitempty"`
	// The Parameter Group name that maps to the Parameter Context
	ParameterGroupName *string `json:"parameterGroupName,omitempty"`
	// True if the Parameter Context should receive the parameters from the mapped Parameter Group
	Synchronized *bool `json:"synchronized,omitempty"`
}

// NewParameterProviderConfigurationDTO instantiates a new ParameterProviderConfigurationDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterProviderConfigurationDTO() *ParameterProviderConfigurationDTO {
	this := ParameterProviderConfigurationDTO{}
	return &this
}

// NewParameterProviderConfigurationDTOWithDefaults instantiates a new ParameterProviderConfigurationDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterProviderConfigurationDTOWithDefaults() *ParameterProviderConfigurationDTO {
	this := ParameterProviderConfigurationDTO{}
	return &this
}

// GetParameterProviderId returns the ParameterProviderId field value if set, zero value otherwise.
func (o *ParameterProviderConfigurationDTO) GetParameterProviderId() string {
	if o == nil || IsNil(o.ParameterProviderId) {
		var ret string
		return ret
	}
	return *o.ParameterProviderId
}

// GetParameterProviderIdOk returns a tuple with the ParameterProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderConfigurationDTO) GetParameterProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterProviderId) {
		return nil, false
	}
	return o.ParameterProviderId, true
}

// HasParameterProviderId returns a boolean if a field has been set.
func (o *ParameterProviderConfigurationDTO) HasParameterProviderId() bool {
	if o != nil && !IsNil(o.ParameterProviderId) {
		return true
	}

	return false
}

// SetParameterProviderId gets a reference to the given string and assigns it to the ParameterProviderId field.
func (o *ParameterProviderConfigurationDTO) SetParameterProviderId(v string) {
	o.ParameterProviderId = &v
}

// GetParameterProviderName returns the ParameterProviderName field value if set, zero value otherwise.
func (o *ParameterProviderConfigurationDTO) GetParameterProviderName() string {
	if o == nil || IsNil(o.ParameterProviderName) {
		var ret string
		return ret
	}
	return *o.ParameterProviderName
}

// GetParameterProviderNameOk returns a tuple with the ParameterProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderConfigurationDTO) GetParameterProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterProviderName) {
		return nil, false
	}
	return o.ParameterProviderName, true
}

// HasParameterProviderName returns a boolean if a field has been set.
func (o *ParameterProviderConfigurationDTO) HasParameterProviderName() bool {
	if o != nil && !IsNil(o.ParameterProviderName) {
		return true
	}

	return false
}

// SetParameterProviderName gets a reference to the given string and assigns it to the ParameterProviderName field.
func (o *ParameterProviderConfigurationDTO) SetParameterProviderName(v string) {
	o.ParameterProviderName = &v
}

// GetParameterGroupName returns the ParameterGroupName field value if set, zero value otherwise.
func (o *ParameterProviderConfigurationDTO) GetParameterGroupName() string {
	if o == nil || IsNil(o.ParameterGroupName) {
		var ret string
		return ret
	}
	return *o.ParameterGroupName
}

// GetParameterGroupNameOk returns a tuple with the ParameterGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderConfigurationDTO) GetParameterGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterGroupName) {
		return nil, false
	}
	return o.ParameterGroupName, true
}

// HasParameterGroupName returns a boolean if a field has been set.
func (o *ParameterProviderConfigurationDTO) HasParameterGroupName() bool {
	if o != nil && !IsNil(o.ParameterGroupName) {
		return true
	}

	return false
}

// SetParameterGroupName gets a reference to the given string and assigns it to the ParameterGroupName field.
func (o *ParameterProviderConfigurationDTO) SetParameterGroupName(v string) {
	o.ParameterGroupName = &v
}

// GetSynchronized returns the Synchronized field value if set, zero value otherwise.
func (o *ParameterProviderConfigurationDTO) GetSynchronized() bool {
	if o == nil || IsNil(o.Synchronized) {
		var ret bool
		return ret
	}
	return *o.Synchronized
}

// GetSynchronizedOk returns a tuple with the Synchronized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterProviderConfigurationDTO) GetSynchronizedOk() (*bool, bool) {
	if o == nil || IsNil(o.Synchronized) {
		return nil, false
	}
	return o.Synchronized, true
}

// HasSynchronized returns a boolean if a field has been set.
func (o *ParameterProviderConfigurationDTO) HasSynchronized() bool {
	if o != nil && !IsNil(o.Synchronized) {
		return true
	}

	return false
}

// SetSynchronized gets a reference to the given bool and assigns it to the Synchronized field.
func (o *ParameterProviderConfigurationDTO) SetSynchronized(v bool) {
	o.Synchronized = &v
}

func (o ParameterProviderConfigurationDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterProviderConfigurationDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParameterProviderId) {
		toSerialize["parameterProviderId"] = o.ParameterProviderId
	}
	if !IsNil(o.ParameterProviderName) {
		toSerialize["parameterProviderName"] = o.ParameterProviderName
	}
	if !IsNil(o.ParameterGroupName) {
		toSerialize["parameterGroupName"] = o.ParameterGroupName
	}
	if !IsNil(o.Synchronized) {
		toSerialize["synchronized"] = o.Synchronized
	}
	return toSerialize, nil
}

type NullableParameterProviderConfigurationDTO struct {
	value *ParameterProviderConfigurationDTO
	isSet bool
}

func (v NullableParameterProviderConfigurationDTO) Get() *ParameterProviderConfigurationDTO {
	return v.value
}

func (v *NullableParameterProviderConfigurationDTO) Set(val *ParameterProviderConfigurationDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterProviderConfigurationDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterProviderConfigurationDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterProviderConfigurationDTO(val *ParameterProviderConfigurationDTO) *NullableParameterProviderConfigurationDTO {
	return &NullableParameterProviderConfigurationDTO{value: val, isSet: true}
}

func (v NullableParameterProviderConfigurationDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterProviderConfigurationDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



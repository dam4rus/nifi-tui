/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the ParameterContextDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterContextDTO{}

// ParameterContextDTO struct for ParameterContextDTO
type ParameterContextDTO struct {
	// The Name of the Parameter Context.
	Name *string `json:"name,omitempty"`
	// The Description of the Parameter Context.
	Description *string `json:"description,omitempty"`
	// The Parameters for the Parameter Context
	Parameters []ParameterEntity `json:"parameters,omitempty"`
	// The Process Groups that are bound to this Parameter Context
	BoundProcessGroups []ProcessGroupEntity `json:"boundProcessGroups,omitempty"`
	// A list of references of Parameter Contexts from which this one inherits parameters
	InheritedParameterContexts []ParameterContextReferenceEntity `json:"inheritedParameterContexts,omitempty"`
	ParameterProviderConfiguration *ParameterProviderConfigurationEntity `json:"parameterProviderConfiguration,omitempty"`
	// The ID the Parameter Context.
	Id *string `json:"id,omitempty"`
}

// NewParameterContextDTO instantiates a new ParameterContextDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterContextDTO() *ParameterContextDTO {
	this := ParameterContextDTO{}
	return &this
}

// NewParameterContextDTOWithDefaults instantiates a new ParameterContextDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterContextDTOWithDefaults() *ParameterContextDTO {
	this := ParameterContextDTO{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ParameterContextDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ParameterContextDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ParameterContextDTO) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ParameterContextDTO) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ParameterContextDTO) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ParameterContextDTO) SetDescription(v string) {
	o.Description = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ParameterContextDTO) GetParameters() []ParameterEntity {
	if o == nil || IsNil(o.Parameters) {
		var ret []ParameterEntity
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextDTO) GetParametersOk() ([]ParameterEntity, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ParameterContextDTO) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ParameterEntity and assigns it to the Parameters field.
func (o *ParameterContextDTO) SetParameters(v []ParameterEntity) {
	o.Parameters = v
}

// GetBoundProcessGroups returns the BoundProcessGroups field value if set, zero value otherwise.
func (o *ParameterContextDTO) GetBoundProcessGroups() []ProcessGroupEntity {
	if o == nil || IsNil(o.BoundProcessGroups) {
		var ret []ProcessGroupEntity
		return ret
	}
	return o.BoundProcessGroups
}

// GetBoundProcessGroupsOk returns a tuple with the BoundProcessGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextDTO) GetBoundProcessGroupsOk() ([]ProcessGroupEntity, bool) {
	if o == nil || IsNil(o.BoundProcessGroups) {
		return nil, false
	}
	return o.BoundProcessGroups, true
}

// HasBoundProcessGroups returns a boolean if a field has been set.
func (o *ParameterContextDTO) HasBoundProcessGroups() bool {
	if o != nil && !IsNil(o.BoundProcessGroups) {
		return true
	}

	return false
}

// SetBoundProcessGroups gets a reference to the given []ProcessGroupEntity and assigns it to the BoundProcessGroups field.
func (o *ParameterContextDTO) SetBoundProcessGroups(v []ProcessGroupEntity) {
	o.BoundProcessGroups = v
}

// GetInheritedParameterContexts returns the InheritedParameterContexts field value if set, zero value otherwise.
func (o *ParameterContextDTO) GetInheritedParameterContexts() []ParameterContextReferenceEntity {
	if o == nil || IsNil(o.InheritedParameterContexts) {
		var ret []ParameterContextReferenceEntity
		return ret
	}
	return o.InheritedParameterContexts
}

// GetInheritedParameterContextsOk returns a tuple with the InheritedParameterContexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextDTO) GetInheritedParameterContextsOk() ([]ParameterContextReferenceEntity, bool) {
	if o == nil || IsNil(o.InheritedParameterContexts) {
		return nil, false
	}
	return o.InheritedParameterContexts, true
}

// HasInheritedParameterContexts returns a boolean if a field has been set.
func (o *ParameterContextDTO) HasInheritedParameterContexts() bool {
	if o != nil && !IsNil(o.InheritedParameterContexts) {
		return true
	}

	return false
}

// SetInheritedParameterContexts gets a reference to the given []ParameterContextReferenceEntity and assigns it to the InheritedParameterContexts field.
func (o *ParameterContextDTO) SetInheritedParameterContexts(v []ParameterContextReferenceEntity) {
	o.InheritedParameterContexts = v
}

// GetParameterProviderConfiguration returns the ParameterProviderConfiguration field value if set, zero value otherwise.
func (o *ParameterContextDTO) GetParameterProviderConfiguration() ParameterProviderConfigurationEntity {
	if o == nil || IsNil(o.ParameterProviderConfiguration) {
		var ret ParameterProviderConfigurationEntity
		return ret
	}
	return *o.ParameterProviderConfiguration
}

// GetParameterProviderConfigurationOk returns a tuple with the ParameterProviderConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextDTO) GetParameterProviderConfigurationOk() (*ParameterProviderConfigurationEntity, bool) {
	if o == nil || IsNil(o.ParameterProviderConfiguration) {
		return nil, false
	}
	return o.ParameterProviderConfiguration, true
}

// HasParameterProviderConfiguration returns a boolean if a field has been set.
func (o *ParameterContextDTO) HasParameterProviderConfiguration() bool {
	if o != nil && !IsNil(o.ParameterProviderConfiguration) {
		return true
	}

	return false
}

// SetParameterProviderConfiguration gets a reference to the given ParameterProviderConfigurationEntity and assigns it to the ParameterProviderConfiguration field.
func (o *ParameterContextDTO) SetParameterProviderConfiguration(v ParameterProviderConfigurationEntity) {
	o.ParameterProviderConfiguration = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ParameterContextDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ParameterContextDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ParameterContextDTO) SetId(v string) {
	o.Id = &v
}

func (o ParameterContextDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterContextDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.BoundProcessGroups) {
		toSerialize["boundProcessGroups"] = o.BoundProcessGroups
	}
	if !IsNil(o.InheritedParameterContexts) {
		toSerialize["inheritedParameterContexts"] = o.InheritedParameterContexts
	}
	if !IsNil(o.ParameterProviderConfiguration) {
		toSerialize["parameterProviderConfiguration"] = o.ParameterProviderConfiguration
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableParameterContextDTO struct {
	value *ParameterContextDTO
	isSet bool
}

func (v NullableParameterContextDTO) Get() *ParameterContextDTO {
	return v.value
}

func (v *NullableParameterContextDTO) Set(val *ParameterContextDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterContextDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterContextDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterContextDTO(val *ParameterContextDTO) *NullableParameterContextDTO {
	return &NullableParameterContextDTO{value: val, isSet: true}
}

func (v NullableParameterContextDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterContextDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



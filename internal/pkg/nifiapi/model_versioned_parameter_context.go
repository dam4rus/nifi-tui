/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the VersionedParameterContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VersionedParameterContext{}

// VersionedParameterContext struct for VersionedParameterContext
type VersionedParameterContext struct {
	// The component's unique identifier
	Identifier *string `json:"identifier,omitempty"`
	// The instance ID of an existing component that is described by this VersionedComponent, or null if this is not mapped to an instantiated component
	InstanceIdentifier *string `json:"instanceIdentifier,omitempty"`
	// The component's name
	Name *string `json:"name,omitempty"`
	// The user-supplied comments for the component
	Comments *string `json:"comments,omitempty"`
	Position *Position `json:"position,omitempty"`
	// The parameters in the context
	Parameters []VersionedParameter `json:"parameters,omitempty"`
	// The names of additional parameter contexts from which to inherit parameters
	InheritedParameterContexts []string `json:"inheritedParameterContexts,omitempty"`
	// The description of the parameter context
	Description *string `json:"description,omitempty"`
	// The identifier of an optional parameter provider
	ParameterProvider *string `json:"parameterProvider,omitempty"`
	// The corresponding parameter group name fetched from the parameter provider, if applicable
	ParameterGroupName *string `json:"parameterGroupName,omitempty"`
	ComponentType *string `json:"componentType,omitempty"`
	// True if the parameter provider is set and the context should receive updates when its parameters are next fetched
	Synchronized *bool `json:"synchronized,omitempty"`
	// The ID of the Process Group that this component belongs to
	GroupIdentifier *string `json:"groupIdentifier,omitempty"`
}

// NewVersionedParameterContext instantiates a new VersionedParameterContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionedParameterContext() *VersionedParameterContext {
	this := VersionedParameterContext{}
	return &this
}

// NewVersionedParameterContextWithDefaults instantiates a new VersionedParameterContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionedParameterContextWithDefaults() *VersionedParameterContext {
	this := VersionedParameterContext{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *VersionedParameterContext) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetInstanceIdentifier returns the InstanceIdentifier field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetInstanceIdentifier() string {
	if o == nil || IsNil(o.InstanceIdentifier) {
		var ret string
		return ret
	}
	return *o.InstanceIdentifier
}

// GetInstanceIdentifierOk returns a tuple with the InstanceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetInstanceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceIdentifier) {
		return nil, false
	}
	return o.InstanceIdentifier, true
}

// HasInstanceIdentifier returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasInstanceIdentifier() bool {
	if o != nil && !IsNil(o.InstanceIdentifier) {
		return true
	}

	return false
}

// SetInstanceIdentifier gets a reference to the given string and assigns it to the InstanceIdentifier field.
func (o *VersionedParameterContext) SetInstanceIdentifier(v string) {
	o.InstanceIdentifier = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VersionedParameterContext) SetName(v string) {
	o.Name = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *VersionedParameterContext) SetComments(v string) {
	o.Comments = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetPosition() Position {
	if o == nil || IsNil(o.Position) {
		var ret Position
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetPositionOk() (*Position, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given Position and assigns it to the Position field.
func (o *VersionedParameterContext) SetPosition(v Position) {
	o.Position = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetParameters() []VersionedParameter {
	if o == nil || IsNil(o.Parameters) {
		var ret []VersionedParameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetParametersOk() ([]VersionedParameter, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []VersionedParameter and assigns it to the Parameters field.
func (o *VersionedParameterContext) SetParameters(v []VersionedParameter) {
	o.Parameters = v
}

// GetInheritedParameterContexts returns the InheritedParameterContexts field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetInheritedParameterContexts() []string {
	if o == nil || IsNil(o.InheritedParameterContexts) {
		var ret []string
		return ret
	}
	return o.InheritedParameterContexts
}

// GetInheritedParameterContextsOk returns a tuple with the InheritedParameterContexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetInheritedParameterContextsOk() ([]string, bool) {
	if o == nil || IsNil(o.InheritedParameterContexts) {
		return nil, false
	}
	return o.InheritedParameterContexts, true
}

// HasInheritedParameterContexts returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasInheritedParameterContexts() bool {
	if o != nil && !IsNil(o.InheritedParameterContexts) {
		return true
	}

	return false
}

// SetInheritedParameterContexts gets a reference to the given []string and assigns it to the InheritedParameterContexts field.
func (o *VersionedParameterContext) SetInheritedParameterContexts(v []string) {
	o.InheritedParameterContexts = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VersionedParameterContext) SetDescription(v string) {
	o.Description = &v
}

// GetParameterProvider returns the ParameterProvider field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetParameterProvider() string {
	if o == nil || IsNil(o.ParameterProvider) {
		var ret string
		return ret
	}
	return *o.ParameterProvider
}

// GetParameterProviderOk returns a tuple with the ParameterProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetParameterProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterProvider) {
		return nil, false
	}
	return o.ParameterProvider, true
}

// HasParameterProvider returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasParameterProvider() bool {
	if o != nil && !IsNil(o.ParameterProvider) {
		return true
	}

	return false
}

// SetParameterProvider gets a reference to the given string and assigns it to the ParameterProvider field.
func (o *VersionedParameterContext) SetParameterProvider(v string) {
	o.ParameterProvider = &v
}

// GetParameterGroupName returns the ParameterGroupName field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetParameterGroupName() string {
	if o == nil || IsNil(o.ParameterGroupName) {
		var ret string
		return ret
	}
	return *o.ParameterGroupName
}

// GetParameterGroupNameOk returns a tuple with the ParameterGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetParameterGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterGroupName) {
		return nil, false
	}
	return o.ParameterGroupName, true
}

// HasParameterGroupName returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasParameterGroupName() bool {
	if o != nil && !IsNil(o.ParameterGroupName) {
		return true
	}

	return false
}

// SetParameterGroupName gets a reference to the given string and assigns it to the ParameterGroupName field.
func (o *VersionedParameterContext) SetParameterGroupName(v string) {
	o.ParameterGroupName = &v
}

// GetComponentType returns the ComponentType field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetComponentType() string {
	if o == nil || IsNil(o.ComponentType) {
		var ret string
		return ret
	}
	return *o.ComponentType
}

// GetComponentTypeOk returns a tuple with the ComponentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetComponentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentType) {
		return nil, false
	}
	return o.ComponentType, true
}

// HasComponentType returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasComponentType() bool {
	if o != nil && !IsNil(o.ComponentType) {
		return true
	}

	return false
}

// SetComponentType gets a reference to the given string and assigns it to the ComponentType field.
func (o *VersionedParameterContext) SetComponentType(v string) {
	o.ComponentType = &v
}

// GetSynchronized returns the Synchronized field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetSynchronized() bool {
	if o == nil || IsNil(o.Synchronized) {
		var ret bool
		return ret
	}
	return *o.Synchronized
}

// GetSynchronizedOk returns a tuple with the Synchronized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetSynchronizedOk() (*bool, bool) {
	if o == nil || IsNil(o.Synchronized) {
		return nil, false
	}
	return o.Synchronized, true
}

// HasSynchronized returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasSynchronized() bool {
	if o != nil && !IsNil(o.Synchronized) {
		return true
	}

	return false
}

// SetSynchronized gets a reference to the given bool and assigns it to the Synchronized field.
func (o *VersionedParameterContext) SetSynchronized(v bool) {
	o.Synchronized = &v
}

// GetGroupIdentifier returns the GroupIdentifier field value if set, zero value otherwise.
func (o *VersionedParameterContext) GetGroupIdentifier() string {
	if o == nil || IsNil(o.GroupIdentifier) {
		var ret string
		return ret
	}
	return *o.GroupIdentifier
}

// GetGroupIdentifierOk returns a tuple with the GroupIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedParameterContext) GetGroupIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.GroupIdentifier) {
		return nil, false
	}
	return o.GroupIdentifier, true
}

// HasGroupIdentifier returns a boolean if a field has been set.
func (o *VersionedParameterContext) HasGroupIdentifier() bool {
	if o != nil && !IsNil(o.GroupIdentifier) {
		return true
	}

	return false
}

// SetGroupIdentifier gets a reference to the given string and assigns it to the GroupIdentifier field.
func (o *VersionedParameterContext) SetGroupIdentifier(v string) {
	o.GroupIdentifier = &v
}

func (o VersionedParameterContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VersionedParameterContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.InstanceIdentifier) {
		toSerialize["instanceIdentifier"] = o.InstanceIdentifier
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.InheritedParameterContexts) {
		toSerialize["inheritedParameterContexts"] = o.InheritedParameterContexts
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ParameterProvider) {
		toSerialize["parameterProvider"] = o.ParameterProvider
	}
	if !IsNil(o.ParameterGroupName) {
		toSerialize["parameterGroupName"] = o.ParameterGroupName
	}
	if !IsNil(o.ComponentType) {
		toSerialize["componentType"] = o.ComponentType
	}
	if !IsNil(o.Synchronized) {
		toSerialize["synchronized"] = o.Synchronized
	}
	if !IsNil(o.GroupIdentifier) {
		toSerialize["groupIdentifier"] = o.GroupIdentifier
	}
	return toSerialize, nil
}

type NullableVersionedParameterContext struct {
	value *VersionedParameterContext
	isSet bool
}

func (v NullableVersionedParameterContext) Get() *VersionedParameterContext {
	return v.value
}

func (v *NullableVersionedParameterContext) Set(val *VersionedParameterContext) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionedParameterContext) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionedParameterContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionedParameterContext(val *VersionedParameterContext) *NullableVersionedParameterContext {
	return &NullableVersionedParameterContext{value: val, isSet: true}
}

func (v NullableVersionedParameterContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionedParameterContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



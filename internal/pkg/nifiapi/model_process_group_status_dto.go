/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the ProcessGroupStatusDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessGroupStatusDTO{}

// ProcessGroupStatusDTO struct for ProcessGroupStatusDTO
type ProcessGroupStatusDTO struct {
	// The ID of the Process Group
	Id *string `json:"id,omitempty"`
	// The name of the Process Group
	Name *string `json:"name,omitempty"`
	// The time the status for the process group was last refreshed.
	StatsLastRefreshed *string `json:"statsLastRefreshed,omitempty"`
	AggregateSnapshot *ProcessGroupStatusSnapshotDTO `json:"aggregateSnapshot,omitempty"`
	// The status reported by each node in the cluster. If the NiFi instance is a standalone instance, rather than a clustered instance, this value may be null.
	NodeSnapshots []NodeProcessGroupStatusSnapshotDTO `json:"nodeSnapshots,omitempty"`
}

// NewProcessGroupStatusDTO instantiates a new ProcessGroupStatusDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessGroupStatusDTO() *ProcessGroupStatusDTO {
	this := ProcessGroupStatusDTO{}
	return &this
}

// NewProcessGroupStatusDTOWithDefaults instantiates a new ProcessGroupStatusDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessGroupStatusDTOWithDefaults() *ProcessGroupStatusDTO {
	this := ProcessGroupStatusDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProcessGroupStatusDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupStatusDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProcessGroupStatusDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProcessGroupStatusDTO) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProcessGroupStatusDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupStatusDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProcessGroupStatusDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProcessGroupStatusDTO) SetName(v string) {
	o.Name = &v
}

// GetStatsLastRefreshed returns the StatsLastRefreshed field value if set, zero value otherwise.
func (o *ProcessGroupStatusDTO) GetStatsLastRefreshed() string {
	if o == nil || IsNil(o.StatsLastRefreshed) {
		var ret string
		return ret
	}
	return *o.StatsLastRefreshed
}

// GetStatsLastRefreshedOk returns a tuple with the StatsLastRefreshed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupStatusDTO) GetStatsLastRefreshedOk() (*string, bool) {
	if o == nil || IsNil(o.StatsLastRefreshed) {
		return nil, false
	}
	return o.StatsLastRefreshed, true
}

// HasStatsLastRefreshed returns a boolean if a field has been set.
func (o *ProcessGroupStatusDTO) HasStatsLastRefreshed() bool {
	if o != nil && !IsNil(o.StatsLastRefreshed) {
		return true
	}

	return false
}

// SetStatsLastRefreshed gets a reference to the given string and assigns it to the StatsLastRefreshed field.
func (o *ProcessGroupStatusDTO) SetStatsLastRefreshed(v string) {
	o.StatsLastRefreshed = &v
}

// GetAggregateSnapshot returns the AggregateSnapshot field value if set, zero value otherwise.
func (o *ProcessGroupStatusDTO) GetAggregateSnapshot() ProcessGroupStatusSnapshotDTO {
	if o == nil || IsNil(o.AggregateSnapshot) {
		var ret ProcessGroupStatusSnapshotDTO
		return ret
	}
	return *o.AggregateSnapshot
}

// GetAggregateSnapshotOk returns a tuple with the AggregateSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupStatusDTO) GetAggregateSnapshotOk() (*ProcessGroupStatusSnapshotDTO, bool) {
	if o == nil || IsNil(o.AggregateSnapshot) {
		return nil, false
	}
	return o.AggregateSnapshot, true
}

// HasAggregateSnapshot returns a boolean if a field has been set.
func (o *ProcessGroupStatusDTO) HasAggregateSnapshot() bool {
	if o != nil && !IsNil(o.AggregateSnapshot) {
		return true
	}

	return false
}

// SetAggregateSnapshot gets a reference to the given ProcessGroupStatusSnapshotDTO and assigns it to the AggregateSnapshot field.
func (o *ProcessGroupStatusDTO) SetAggregateSnapshot(v ProcessGroupStatusSnapshotDTO) {
	o.AggregateSnapshot = &v
}

// GetNodeSnapshots returns the NodeSnapshots field value if set, zero value otherwise.
func (o *ProcessGroupStatusDTO) GetNodeSnapshots() []NodeProcessGroupStatusSnapshotDTO {
	if o == nil || IsNil(o.NodeSnapshots) {
		var ret []NodeProcessGroupStatusSnapshotDTO
		return ret
	}
	return o.NodeSnapshots
}

// GetNodeSnapshotsOk returns a tuple with the NodeSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessGroupStatusDTO) GetNodeSnapshotsOk() ([]NodeProcessGroupStatusSnapshotDTO, bool) {
	if o == nil || IsNil(o.NodeSnapshots) {
		return nil, false
	}
	return o.NodeSnapshots, true
}

// HasNodeSnapshots returns a boolean if a field has been set.
func (o *ProcessGroupStatusDTO) HasNodeSnapshots() bool {
	if o != nil && !IsNil(o.NodeSnapshots) {
		return true
	}

	return false
}

// SetNodeSnapshots gets a reference to the given []NodeProcessGroupStatusSnapshotDTO and assigns it to the NodeSnapshots field.
func (o *ProcessGroupStatusDTO) SetNodeSnapshots(v []NodeProcessGroupStatusSnapshotDTO) {
	o.NodeSnapshots = v
}

func (o ProcessGroupStatusDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessGroupStatusDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StatsLastRefreshed) {
		toSerialize["statsLastRefreshed"] = o.StatsLastRefreshed
	}
	if !IsNil(o.AggregateSnapshot) {
		toSerialize["aggregateSnapshot"] = o.AggregateSnapshot
	}
	if !IsNil(o.NodeSnapshots) {
		toSerialize["nodeSnapshots"] = o.NodeSnapshots
	}
	return toSerialize, nil
}

type NullableProcessGroupStatusDTO struct {
	value *ProcessGroupStatusDTO
	isSet bool
}

func (v NullableProcessGroupStatusDTO) Get() *ProcessGroupStatusDTO {
	return v.value
}

func (v *NullableProcessGroupStatusDTO) Set(val *ProcessGroupStatusDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessGroupStatusDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessGroupStatusDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessGroupStatusDTO(val *ProcessGroupStatusDTO) *NullableProcessGroupStatusDTO {
	return &NullableProcessGroupStatusDTO{value: val, isSet: true}
}

func (v NullableProcessGroupStatusDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessGroupStatusDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



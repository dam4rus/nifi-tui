/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the PortStatusSnapshotDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortStatusSnapshotDTO{}

// PortStatusSnapshotDTO struct for PortStatusSnapshotDTO
type PortStatusSnapshotDTO struct {
	// The id of the port.
	Id *string `json:"id,omitempty"`
	// The id of the parent process group of the port.
	GroupId *string `json:"groupId,omitempty"`
	// The name of the port.
	Name *string `json:"name,omitempty"`
	// The active thread count for the port.
	ActiveThreadCount *int32 `json:"activeThreadCount,omitempty"`
	// The number of FlowFiles that have been accepted in the last 5 minutes.
	FlowFilesIn *int32 `json:"flowFilesIn,omitempty"`
	// The size of hte FlowFiles that have been accepted in the last 5 minutes.
	BytesIn *int64 `json:"bytesIn,omitempty"`
	// The count/size of flowfiles that have been accepted in the last 5 minutes.
	Input *string `json:"input,omitempty"`
	// The number of FlowFiles that have been processed in the last 5 minutes.
	FlowFilesOut *int32 `json:"flowFilesOut,omitempty"`
	// The number of bytes that have been processed in the last 5 minutes.
	BytesOut *int64 `json:"bytesOut,omitempty"`
	// The count/size of flowfiles that have been processed in the last 5 minutes.
	Output *string `json:"output,omitempty"`
	// Whether the port has incoming or outgoing connections to a remote NiFi.
	Transmitting *bool `json:"transmitting,omitempty"`
	// The run status of the port.
	RunStatus *string `json:"runStatus,omitempty"`
}

// NewPortStatusSnapshotDTO instantiates a new PortStatusSnapshotDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortStatusSnapshotDTO() *PortStatusSnapshotDTO {
	this := PortStatusSnapshotDTO{}
	return &this
}

// NewPortStatusSnapshotDTOWithDefaults instantiates a new PortStatusSnapshotDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortStatusSnapshotDTOWithDefaults() *PortStatusSnapshotDTO {
	this := PortStatusSnapshotDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PortStatusSnapshotDTO) SetId(v string) {
	o.Id = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *PortStatusSnapshotDTO) SetGroupId(v string) {
	o.GroupId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PortStatusSnapshotDTO) SetName(v string) {
	o.Name = &v
}

// GetActiveThreadCount returns the ActiveThreadCount field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetActiveThreadCount() int32 {
	if o == nil || IsNil(o.ActiveThreadCount) {
		var ret int32
		return ret
	}
	return *o.ActiveThreadCount
}

// GetActiveThreadCountOk returns a tuple with the ActiveThreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetActiveThreadCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveThreadCount) {
		return nil, false
	}
	return o.ActiveThreadCount, true
}

// HasActiveThreadCount returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasActiveThreadCount() bool {
	if o != nil && !IsNil(o.ActiveThreadCount) {
		return true
	}

	return false
}

// SetActiveThreadCount gets a reference to the given int32 and assigns it to the ActiveThreadCount field.
func (o *PortStatusSnapshotDTO) SetActiveThreadCount(v int32) {
	o.ActiveThreadCount = &v
}

// GetFlowFilesIn returns the FlowFilesIn field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetFlowFilesIn() int32 {
	if o == nil || IsNil(o.FlowFilesIn) {
		var ret int32
		return ret
	}
	return *o.FlowFilesIn
}

// GetFlowFilesInOk returns a tuple with the FlowFilesIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetFlowFilesInOk() (*int32, bool) {
	if o == nil || IsNil(o.FlowFilesIn) {
		return nil, false
	}
	return o.FlowFilesIn, true
}

// HasFlowFilesIn returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasFlowFilesIn() bool {
	if o != nil && !IsNil(o.FlowFilesIn) {
		return true
	}

	return false
}

// SetFlowFilesIn gets a reference to the given int32 and assigns it to the FlowFilesIn field.
func (o *PortStatusSnapshotDTO) SetFlowFilesIn(v int32) {
	o.FlowFilesIn = &v
}

// GetBytesIn returns the BytesIn field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetBytesIn() int64 {
	if o == nil || IsNil(o.BytesIn) {
		var ret int64
		return ret
	}
	return *o.BytesIn
}

// GetBytesInOk returns a tuple with the BytesIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetBytesInOk() (*int64, bool) {
	if o == nil || IsNil(o.BytesIn) {
		return nil, false
	}
	return o.BytesIn, true
}

// HasBytesIn returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasBytesIn() bool {
	if o != nil && !IsNil(o.BytesIn) {
		return true
	}

	return false
}

// SetBytesIn gets a reference to the given int64 and assigns it to the BytesIn field.
func (o *PortStatusSnapshotDTO) SetBytesIn(v int64) {
	o.BytesIn = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetInput() string {
	if o == nil || IsNil(o.Input) {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetInputOk() (*string, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *PortStatusSnapshotDTO) SetInput(v string) {
	o.Input = &v
}

// GetFlowFilesOut returns the FlowFilesOut field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetFlowFilesOut() int32 {
	if o == nil || IsNil(o.FlowFilesOut) {
		var ret int32
		return ret
	}
	return *o.FlowFilesOut
}

// GetFlowFilesOutOk returns a tuple with the FlowFilesOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetFlowFilesOutOk() (*int32, bool) {
	if o == nil || IsNil(o.FlowFilesOut) {
		return nil, false
	}
	return o.FlowFilesOut, true
}

// HasFlowFilesOut returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasFlowFilesOut() bool {
	if o != nil && !IsNil(o.FlowFilesOut) {
		return true
	}

	return false
}

// SetFlowFilesOut gets a reference to the given int32 and assigns it to the FlowFilesOut field.
func (o *PortStatusSnapshotDTO) SetFlowFilesOut(v int32) {
	o.FlowFilesOut = &v
}

// GetBytesOut returns the BytesOut field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetBytesOut() int64 {
	if o == nil || IsNil(o.BytesOut) {
		var ret int64
		return ret
	}
	return *o.BytesOut
}

// GetBytesOutOk returns a tuple with the BytesOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetBytesOutOk() (*int64, bool) {
	if o == nil || IsNil(o.BytesOut) {
		return nil, false
	}
	return o.BytesOut, true
}

// HasBytesOut returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasBytesOut() bool {
	if o != nil && !IsNil(o.BytesOut) {
		return true
	}

	return false
}

// SetBytesOut gets a reference to the given int64 and assigns it to the BytesOut field.
func (o *PortStatusSnapshotDTO) SetBytesOut(v int64) {
	o.BytesOut = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetOutput() string {
	if o == nil || IsNil(o.Output) {
		var ret string
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetOutputOk() (*string, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given string and assigns it to the Output field.
func (o *PortStatusSnapshotDTO) SetOutput(v string) {
	o.Output = &v
}

// GetTransmitting returns the Transmitting field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetTransmitting() bool {
	if o == nil || IsNil(o.Transmitting) {
		var ret bool
		return ret
	}
	return *o.Transmitting
}

// GetTransmittingOk returns a tuple with the Transmitting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetTransmittingOk() (*bool, bool) {
	if o == nil || IsNil(o.Transmitting) {
		return nil, false
	}
	return o.Transmitting, true
}

// HasTransmitting returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasTransmitting() bool {
	if o != nil && !IsNil(o.Transmitting) {
		return true
	}

	return false
}

// SetTransmitting gets a reference to the given bool and assigns it to the Transmitting field.
func (o *PortStatusSnapshotDTO) SetTransmitting(v bool) {
	o.Transmitting = &v
}

// GetRunStatus returns the RunStatus field value if set, zero value otherwise.
func (o *PortStatusSnapshotDTO) GetRunStatus() string {
	if o == nil || IsNil(o.RunStatus) {
		var ret string
		return ret
	}
	return *o.RunStatus
}

// GetRunStatusOk returns a tuple with the RunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortStatusSnapshotDTO) GetRunStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RunStatus) {
		return nil, false
	}
	return o.RunStatus, true
}

// HasRunStatus returns a boolean if a field has been set.
func (o *PortStatusSnapshotDTO) HasRunStatus() bool {
	if o != nil && !IsNil(o.RunStatus) {
		return true
	}

	return false
}

// SetRunStatus gets a reference to the given string and assigns it to the RunStatus field.
func (o *PortStatusSnapshotDTO) SetRunStatus(v string) {
	o.RunStatus = &v
}

func (o PortStatusSnapshotDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortStatusSnapshotDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ActiveThreadCount) {
		toSerialize["activeThreadCount"] = o.ActiveThreadCount
	}
	if !IsNil(o.FlowFilesIn) {
		toSerialize["flowFilesIn"] = o.FlowFilesIn
	}
	if !IsNil(o.BytesIn) {
		toSerialize["bytesIn"] = o.BytesIn
	}
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	if !IsNil(o.FlowFilesOut) {
		toSerialize["flowFilesOut"] = o.FlowFilesOut
	}
	if !IsNil(o.BytesOut) {
		toSerialize["bytesOut"] = o.BytesOut
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !IsNil(o.Transmitting) {
		toSerialize["transmitting"] = o.Transmitting
	}
	if !IsNil(o.RunStatus) {
		toSerialize["runStatus"] = o.RunStatus
	}
	return toSerialize, nil
}

type NullablePortStatusSnapshotDTO struct {
	value *PortStatusSnapshotDTO
	isSet bool
}

func (v NullablePortStatusSnapshotDTO) Get() *PortStatusSnapshotDTO {
	return v.value
}

func (v *NullablePortStatusSnapshotDTO) Set(val *PortStatusSnapshotDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePortStatusSnapshotDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePortStatusSnapshotDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortStatusSnapshotDTO(val *PortStatusSnapshotDTO) *NullablePortStatusSnapshotDTO {
	return &NullablePortStatusSnapshotDTO{value: val, isSet: true}
}

func (v NullablePortStatusSnapshotDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortStatusSnapshotDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



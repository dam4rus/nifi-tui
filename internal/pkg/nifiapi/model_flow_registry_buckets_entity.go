/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the FlowRegistryBucketsEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowRegistryBucketsEntity{}

// FlowRegistryBucketsEntity struct for FlowRegistryBucketsEntity
type FlowRegistryBucketsEntity struct {
	Buckets []FlowRegistryBucketEntity `json:"buckets,omitempty"`
}

// NewFlowRegistryBucketsEntity instantiates a new FlowRegistryBucketsEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowRegistryBucketsEntity() *FlowRegistryBucketsEntity {
	this := FlowRegistryBucketsEntity{}
	return &this
}

// NewFlowRegistryBucketsEntityWithDefaults instantiates a new FlowRegistryBucketsEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowRegistryBucketsEntityWithDefaults() *FlowRegistryBucketsEntity {
	this := FlowRegistryBucketsEntity{}
	return &this
}

// GetBuckets returns the Buckets field value if set, zero value otherwise.
func (o *FlowRegistryBucketsEntity) GetBuckets() []FlowRegistryBucketEntity {
	if o == nil || IsNil(o.Buckets) {
		var ret []FlowRegistryBucketEntity
		return ret
	}
	return o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowRegistryBucketsEntity) GetBucketsOk() ([]FlowRegistryBucketEntity, bool) {
	if o == nil || IsNil(o.Buckets) {
		return nil, false
	}
	return o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *FlowRegistryBucketsEntity) HasBuckets() bool {
	if o != nil && !IsNil(o.Buckets) {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []FlowRegistryBucketEntity and assigns it to the Buckets field.
func (o *FlowRegistryBucketsEntity) SetBuckets(v []FlowRegistryBucketEntity) {
	o.Buckets = v
}

func (o FlowRegistryBucketsEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowRegistryBucketsEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Buckets) {
		toSerialize["buckets"] = o.Buckets
	}
	return toSerialize, nil
}

type NullableFlowRegistryBucketsEntity struct {
	value *FlowRegistryBucketsEntity
	isSet bool
}

func (v NullableFlowRegistryBucketsEntity) Get() *FlowRegistryBucketsEntity {
	return v.value
}

func (v *NullableFlowRegistryBucketsEntity) Set(val *FlowRegistryBucketsEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowRegistryBucketsEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowRegistryBucketsEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowRegistryBucketsEntity(val *FlowRegistryBucketsEntity) *NullableFlowRegistryBucketsEntity {
	return &NullableFlowRegistryBucketsEntity{value: val, isSet: true}
}

func (v NullableFlowRegistryBucketsEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowRegistryBucketsEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



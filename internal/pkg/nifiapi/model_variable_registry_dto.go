/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the VariableRegistryDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableRegistryDTO{}

// VariableRegistryDTO struct for VariableRegistryDTO
type VariableRegistryDTO struct {
	// The variables that are available in this Variable Registry
	Variables []VariableEntity `json:"variables,omitempty"`
	// The UUID of the Process Group that this Variable Registry belongs to
	ProcessGroupId *string `json:"processGroupId,omitempty"`
}

// NewVariableRegistryDTO instantiates a new VariableRegistryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableRegistryDTO() *VariableRegistryDTO {
	this := VariableRegistryDTO{}
	return &this
}

// NewVariableRegistryDTOWithDefaults instantiates a new VariableRegistryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableRegistryDTOWithDefaults() *VariableRegistryDTO {
	this := VariableRegistryDTO{}
	return &this
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *VariableRegistryDTO) GetVariables() []VariableEntity {
	if o == nil || IsNil(o.Variables) {
		var ret []VariableEntity
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableRegistryDTO) GetVariablesOk() ([]VariableEntity, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *VariableRegistryDTO) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given []VariableEntity and assigns it to the Variables field.
func (o *VariableRegistryDTO) SetVariables(v []VariableEntity) {
	o.Variables = v
}

// GetProcessGroupId returns the ProcessGroupId field value if set, zero value otherwise.
func (o *VariableRegistryDTO) GetProcessGroupId() string {
	if o == nil || IsNil(o.ProcessGroupId) {
		var ret string
		return ret
	}
	return *o.ProcessGroupId
}

// GetProcessGroupIdOk returns a tuple with the ProcessGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableRegistryDTO) GetProcessGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessGroupId) {
		return nil, false
	}
	return o.ProcessGroupId, true
}

// HasProcessGroupId returns a boolean if a field has been set.
func (o *VariableRegistryDTO) HasProcessGroupId() bool {
	if o != nil && !IsNil(o.ProcessGroupId) {
		return true
	}

	return false
}

// SetProcessGroupId gets a reference to the given string and assigns it to the ProcessGroupId field.
func (o *VariableRegistryDTO) SetProcessGroupId(v string) {
	o.ProcessGroupId = &v
}

func (o VariableRegistryDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableRegistryDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	if !IsNil(o.ProcessGroupId) {
		toSerialize["processGroupId"] = o.ProcessGroupId
	}
	return toSerialize, nil
}

type NullableVariableRegistryDTO struct {
	value *VariableRegistryDTO
	isSet bool
}

func (v NullableVariableRegistryDTO) Get() *VariableRegistryDTO {
	return v.value
}

func (v *NullableVariableRegistryDTO) Set(val *VariableRegistryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableRegistryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableRegistryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableRegistryDTO(val *VariableRegistryDTO) *NullableVariableRegistryDTO {
	return &NullableVariableRegistryDTO{value: val, isSet: true}
}

func (v NullableVariableRegistryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableRegistryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



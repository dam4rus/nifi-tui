/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the FlowRegistryBucketEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowRegistryBucketEntity{}

// FlowRegistryBucketEntity struct for FlowRegistryBucketEntity
type FlowRegistryBucketEntity struct {
	Id *string `json:"id,omitempty"`
	Bucket *FlowRegistryBucketDTO `json:"bucket,omitempty"`
	Permissions *PermissionsDTO `json:"permissions,omitempty"`
}

// NewFlowRegistryBucketEntity instantiates a new FlowRegistryBucketEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowRegistryBucketEntity() *FlowRegistryBucketEntity {
	this := FlowRegistryBucketEntity{}
	return &this
}

// NewFlowRegistryBucketEntityWithDefaults instantiates a new FlowRegistryBucketEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowRegistryBucketEntityWithDefaults() *FlowRegistryBucketEntity {
	this := FlowRegistryBucketEntity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FlowRegistryBucketEntity) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowRegistryBucketEntity) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FlowRegistryBucketEntity) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FlowRegistryBucketEntity) SetId(v string) {
	o.Id = &v
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *FlowRegistryBucketEntity) GetBucket() FlowRegistryBucketDTO {
	if o == nil || IsNil(o.Bucket) {
		var ret FlowRegistryBucketDTO
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowRegistryBucketEntity) GetBucketOk() (*FlowRegistryBucketDTO, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *FlowRegistryBucketEntity) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given FlowRegistryBucketDTO and assigns it to the Bucket field.
func (o *FlowRegistryBucketEntity) SetBucket(v FlowRegistryBucketDTO) {
	o.Bucket = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *FlowRegistryBucketEntity) GetPermissions() PermissionsDTO {
	if o == nil || IsNil(o.Permissions) {
		var ret PermissionsDTO
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowRegistryBucketEntity) GetPermissionsOk() (*PermissionsDTO, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *FlowRegistryBucketEntity) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given PermissionsDTO and assigns it to the Permissions field.
func (o *FlowRegistryBucketEntity) SetPermissions(v PermissionsDTO) {
	o.Permissions = &v
}

func (o FlowRegistryBucketEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowRegistryBucketEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableFlowRegistryBucketEntity struct {
	value *FlowRegistryBucketEntity
	isSet bool
}

func (v NullableFlowRegistryBucketEntity) Get() *FlowRegistryBucketEntity {
	return v.value
}

func (v *NullableFlowRegistryBucketEntity) Set(val *FlowRegistryBucketEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowRegistryBucketEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowRegistryBucketEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowRegistryBucketEntity(val *FlowRegistryBucketEntity) *NullableFlowRegistryBucketEntity {
	return &NullableFlowRegistryBucketEntity{value: val, isSet: true}
}

func (v NullableFlowRegistryBucketEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowRegistryBucketEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the RemoteProcessGroupDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteProcessGroupDTO{}

// RemoteProcessGroupDTO struct for RemoteProcessGroupDTO
type RemoteProcessGroupDTO struct {
	// The id of the component.
	Id *string `json:"id,omitempty"`
	// The ID of the corresponding component that is under version control
	VersionedComponentId *string `json:"versionedComponentId,omitempty"`
	// The id of parent process group of this component if applicable.
	ParentGroupId *string `json:"parentGroupId,omitempty"`
	Position *PositionDTO `json:"position,omitempty"`
	// The target URI of the remote process group. If target uri is not set, but uris are set, then returns the first url in the urls. If neither target uri nor uris are set, then returns null.
	TargetUri *string `json:"targetUri,omitempty"`
	// The target URI of the remote process group. If target uris is not set but target uri is set, then returns a collection containing the single target uri. If neither target uris nor uris are set, then returns null.
	TargetUris *string `json:"targetUris,omitempty"`
	// Whether the target is running securely.
	TargetSecure *bool `json:"targetSecure,omitempty"`
	// The name of the remote process group.
	Name *string `json:"name,omitempty"`
	// The comments for the remote process group.
	Comments *string `json:"comments,omitempty"`
	// The time period used for the timeout when communicating with the target.
	CommunicationsTimeout *string `json:"communicationsTimeout,omitempty"`
	// When yielding, this amount of time must elapse before the remote process group is scheduled again.
	YieldDuration *string `json:"yieldDuration,omitempty"`
	TransportProtocol *string `json:"transportProtocol,omitempty"`
	// The local network interface to send/receive data. If not specified, any local address is used. If clustered, all nodes must have an interface with this identifier.
	LocalNetworkInterface *string `json:"localNetworkInterface,omitempty"`
	ProxyHost *string `json:"proxyHost,omitempty"`
	ProxyPort *int32 `json:"proxyPort,omitempty"`
	ProxyUser *string `json:"proxyUser,omitempty"`
	ProxyPassword *string `json:"proxyPassword,omitempty"`
	// Any remote authorization issues for the remote process group.
	AuthorizationIssues []string `json:"authorizationIssues,omitempty"`
	// The validation errors for the remote process group. These validation errors represent the problems with the remote process group that must be resolved before it can transmit.
	ValidationErrors []string `json:"validationErrors,omitempty"`
	// Whether the remote process group is actively transmitting.
	Transmitting *bool `json:"transmitting,omitempty"`
	// The number of remote input ports currently available on the target.
	InputPortCount *int32 `json:"inputPortCount,omitempty"`
	// The number of remote output ports currently available on the target.
	OutputPortCount *int32 `json:"outputPortCount,omitempty"`
	// The number of active remote input ports.
	ActiveRemoteInputPortCount *int32 `json:"activeRemoteInputPortCount,omitempty"`
	// The number of inactive remote input ports.
	InactiveRemoteInputPortCount *int32 `json:"inactiveRemoteInputPortCount,omitempty"`
	// The number of active remote output ports.
	ActiveRemoteOutputPortCount *int32 `json:"activeRemoteOutputPortCount,omitempty"`
	// The number of inactive remote output ports.
	InactiveRemoteOutputPortCount *int32 `json:"inactiveRemoteOutputPortCount,omitempty"`
	// The timestamp when this remote process group was last refreshed.
	FlowRefreshed *string `json:"flowRefreshed,omitempty"`
	Contents *RemoteProcessGroupContentsDTO `json:"contents,omitempty"`
}

// NewRemoteProcessGroupDTO instantiates a new RemoteProcessGroupDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteProcessGroupDTO() *RemoteProcessGroupDTO {
	this := RemoteProcessGroupDTO{}
	return &this
}

// NewRemoteProcessGroupDTOWithDefaults instantiates a new RemoteProcessGroupDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteProcessGroupDTOWithDefaults() *RemoteProcessGroupDTO {
	this := RemoteProcessGroupDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RemoteProcessGroupDTO) SetId(v string) {
	o.Id = &v
}

// GetVersionedComponentId returns the VersionedComponentId field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetVersionedComponentId() string {
	if o == nil || IsNil(o.VersionedComponentId) {
		var ret string
		return ret
	}
	return *o.VersionedComponentId
}

// GetVersionedComponentIdOk returns a tuple with the VersionedComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetVersionedComponentIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionedComponentId) {
		return nil, false
	}
	return o.VersionedComponentId, true
}

// HasVersionedComponentId returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasVersionedComponentId() bool {
	if o != nil && !IsNil(o.VersionedComponentId) {
		return true
	}

	return false
}

// SetVersionedComponentId gets a reference to the given string and assigns it to the VersionedComponentId field.
func (o *RemoteProcessGroupDTO) SetVersionedComponentId(v string) {
	o.VersionedComponentId = &v
}

// GetParentGroupId returns the ParentGroupId field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetParentGroupId() string {
	if o == nil || IsNil(o.ParentGroupId) {
		var ret string
		return ret
	}
	return *o.ParentGroupId
}

// GetParentGroupIdOk returns a tuple with the ParentGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetParentGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentGroupId) {
		return nil, false
	}
	return o.ParentGroupId, true
}

// HasParentGroupId returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasParentGroupId() bool {
	if o != nil && !IsNil(o.ParentGroupId) {
		return true
	}

	return false
}

// SetParentGroupId gets a reference to the given string and assigns it to the ParentGroupId field.
func (o *RemoteProcessGroupDTO) SetParentGroupId(v string) {
	o.ParentGroupId = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetPosition() PositionDTO {
	if o == nil || IsNil(o.Position) {
		var ret PositionDTO
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetPositionOk() (*PositionDTO, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given PositionDTO and assigns it to the Position field.
func (o *RemoteProcessGroupDTO) SetPosition(v PositionDTO) {
	o.Position = &v
}

// GetTargetUri returns the TargetUri field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetTargetUri() string {
	if o == nil || IsNil(o.TargetUri) {
		var ret string
		return ret
	}
	return *o.TargetUri
}

// GetTargetUriOk returns a tuple with the TargetUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetTargetUriOk() (*string, bool) {
	if o == nil || IsNil(o.TargetUri) {
		return nil, false
	}
	return o.TargetUri, true
}

// HasTargetUri returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasTargetUri() bool {
	if o != nil && !IsNil(o.TargetUri) {
		return true
	}

	return false
}

// SetTargetUri gets a reference to the given string and assigns it to the TargetUri field.
func (o *RemoteProcessGroupDTO) SetTargetUri(v string) {
	o.TargetUri = &v
}

// GetTargetUris returns the TargetUris field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetTargetUris() string {
	if o == nil || IsNil(o.TargetUris) {
		var ret string
		return ret
	}
	return *o.TargetUris
}

// GetTargetUrisOk returns a tuple with the TargetUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetTargetUrisOk() (*string, bool) {
	if o == nil || IsNil(o.TargetUris) {
		return nil, false
	}
	return o.TargetUris, true
}

// HasTargetUris returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasTargetUris() bool {
	if o != nil && !IsNil(o.TargetUris) {
		return true
	}

	return false
}

// SetTargetUris gets a reference to the given string and assigns it to the TargetUris field.
func (o *RemoteProcessGroupDTO) SetTargetUris(v string) {
	o.TargetUris = &v
}

// GetTargetSecure returns the TargetSecure field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetTargetSecure() bool {
	if o == nil || IsNil(o.TargetSecure) {
		var ret bool
		return ret
	}
	return *o.TargetSecure
}

// GetTargetSecureOk returns a tuple with the TargetSecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetTargetSecureOk() (*bool, bool) {
	if o == nil || IsNil(o.TargetSecure) {
		return nil, false
	}
	return o.TargetSecure, true
}

// HasTargetSecure returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasTargetSecure() bool {
	if o != nil && !IsNil(o.TargetSecure) {
		return true
	}

	return false
}

// SetTargetSecure gets a reference to the given bool and assigns it to the TargetSecure field.
func (o *RemoteProcessGroupDTO) SetTargetSecure(v bool) {
	o.TargetSecure = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RemoteProcessGroupDTO) SetName(v string) {
	o.Name = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *RemoteProcessGroupDTO) SetComments(v string) {
	o.Comments = &v
}

// GetCommunicationsTimeout returns the CommunicationsTimeout field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetCommunicationsTimeout() string {
	if o == nil || IsNil(o.CommunicationsTimeout) {
		var ret string
		return ret
	}
	return *o.CommunicationsTimeout
}

// GetCommunicationsTimeoutOk returns a tuple with the CommunicationsTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetCommunicationsTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.CommunicationsTimeout) {
		return nil, false
	}
	return o.CommunicationsTimeout, true
}

// HasCommunicationsTimeout returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasCommunicationsTimeout() bool {
	if o != nil && !IsNil(o.CommunicationsTimeout) {
		return true
	}

	return false
}

// SetCommunicationsTimeout gets a reference to the given string and assigns it to the CommunicationsTimeout field.
func (o *RemoteProcessGroupDTO) SetCommunicationsTimeout(v string) {
	o.CommunicationsTimeout = &v
}

// GetYieldDuration returns the YieldDuration field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetYieldDuration() string {
	if o == nil || IsNil(o.YieldDuration) {
		var ret string
		return ret
	}
	return *o.YieldDuration
}

// GetYieldDurationOk returns a tuple with the YieldDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetYieldDurationOk() (*string, bool) {
	if o == nil || IsNil(o.YieldDuration) {
		return nil, false
	}
	return o.YieldDuration, true
}

// HasYieldDuration returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasYieldDuration() bool {
	if o != nil && !IsNil(o.YieldDuration) {
		return true
	}

	return false
}

// SetYieldDuration gets a reference to the given string and assigns it to the YieldDuration field.
func (o *RemoteProcessGroupDTO) SetYieldDuration(v string) {
	o.YieldDuration = &v
}

// GetTransportProtocol returns the TransportProtocol field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetTransportProtocol() string {
	if o == nil || IsNil(o.TransportProtocol) {
		var ret string
		return ret
	}
	return *o.TransportProtocol
}

// GetTransportProtocolOk returns a tuple with the TransportProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetTransportProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.TransportProtocol) {
		return nil, false
	}
	return o.TransportProtocol, true
}

// HasTransportProtocol returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasTransportProtocol() bool {
	if o != nil && !IsNil(o.TransportProtocol) {
		return true
	}

	return false
}

// SetTransportProtocol gets a reference to the given string and assigns it to the TransportProtocol field.
func (o *RemoteProcessGroupDTO) SetTransportProtocol(v string) {
	o.TransportProtocol = &v
}

// GetLocalNetworkInterface returns the LocalNetworkInterface field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetLocalNetworkInterface() string {
	if o == nil || IsNil(o.LocalNetworkInterface) {
		var ret string
		return ret
	}
	return *o.LocalNetworkInterface
}

// GetLocalNetworkInterfaceOk returns a tuple with the LocalNetworkInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetLocalNetworkInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.LocalNetworkInterface) {
		return nil, false
	}
	return o.LocalNetworkInterface, true
}

// HasLocalNetworkInterface returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasLocalNetworkInterface() bool {
	if o != nil && !IsNil(o.LocalNetworkInterface) {
		return true
	}

	return false
}

// SetLocalNetworkInterface gets a reference to the given string and assigns it to the LocalNetworkInterface field.
func (o *RemoteProcessGroupDTO) SetLocalNetworkInterface(v string) {
	o.LocalNetworkInterface = &v
}

// GetProxyHost returns the ProxyHost field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetProxyHost() string {
	if o == nil || IsNil(o.ProxyHost) {
		var ret string
		return ret
	}
	return *o.ProxyHost
}

// GetProxyHostOk returns a tuple with the ProxyHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetProxyHostOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyHost) {
		return nil, false
	}
	return o.ProxyHost, true
}

// HasProxyHost returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasProxyHost() bool {
	if o != nil && !IsNil(o.ProxyHost) {
		return true
	}

	return false
}

// SetProxyHost gets a reference to the given string and assigns it to the ProxyHost field.
func (o *RemoteProcessGroupDTO) SetProxyHost(v string) {
	o.ProxyHost = &v
}

// GetProxyPort returns the ProxyPort field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetProxyPort() int32 {
	if o == nil || IsNil(o.ProxyPort) {
		var ret int32
		return ret
	}
	return *o.ProxyPort
}

// GetProxyPortOk returns a tuple with the ProxyPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetProxyPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ProxyPort) {
		return nil, false
	}
	return o.ProxyPort, true
}

// HasProxyPort returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasProxyPort() bool {
	if o != nil && !IsNil(o.ProxyPort) {
		return true
	}

	return false
}

// SetProxyPort gets a reference to the given int32 and assigns it to the ProxyPort field.
func (o *RemoteProcessGroupDTO) SetProxyPort(v int32) {
	o.ProxyPort = &v
}

// GetProxyUser returns the ProxyUser field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetProxyUser() string {
	if o == nil || IsNil(o.ProxyUser) {
		var ret string
		return ret
	}
	return *o.ProxyUser
}

// GetProxyUserOk returns a tuple with the ProxyUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetProxyUserOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyUser) {
		return nil, false
	}
	return o.ProxyUser, true
}

// HasProxyUser returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasProxyUser() bool {
	if o != nil && !IsNil(o.ProxyUser) {
		return true
	}

	return false
}

// SetProxyUser gets a reference to the given string and assigns it to the ProxyUser field.
func (o *RemoteProcessGroupDTO) SetProxyUser(v string) {
	o.ProxyUser = &v
}

// GetProxyPassword returns the ProxyPassword field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetProxyPassword() string {
	if o == nil || IsNil(o.ProxyPassword) {
		var ret string
		return ret
	}
	return *o.ProxyPassword
}

// GetProxyPasswordOk returns a tuple with the ProxyPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetProxyPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyPassword) {
		return nil, false
	}
	return o.ProxyPassword, true
}

// HasProxyPassword returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasProxyPassword() bool {
	if o != nil && !IsNil(o.ProxyPassword) {
		return true
	}

	return false
}

// SetProxyPassword gets a reference to the given string and assigns it to the ProxyPassword field.
func (o *RemoteProcessGroupDTO) SetProxyPassword(v string) {
	o.ProxyPassword = &v
}

// GetAuthorizationIssues returns the AuthorizationIssues field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetAuthorizationIssues() []string {
	if o == nil || IsNil(o.AuthorizationIssues) {
		var ret []string
		return ret
	}
	return o.AuthorizationIssues
}

// GetAuthorizationIssuesOk returns a tuple with the AuthorizationIssues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetAuthorizationIssuesOk() ([]string, bool) {
	if o == nil || IsNil(o.AuthorizationIssues) {
		return nil, false
	}
	return o.AuthorizationIssues, true
}

// HasAuthorizationIssues returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasAuthorizationIssues() bool {
	if o != nil && !IsNil(o.AuthorizationIssues) {
		return true
	}

	return false
}

// SetAuthorizationIssues gets a reference to the given []string and assigns it to the AuthorizationIssues field.
func (o *RemoteProcessGroupDTO) SetAuthorizationIssues(v []string) {
	o.AuthorizationIssues = v
}

// GetValidationErrors returns the ValidationErrors field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetValidationErrors() []string {
	if o == nil || IsNil(o.ValidationErrors) {
		var ret []string
		return ret
	}
	return o.ValidationErrors
}

// GetValidationErrorsOk returns a tuple with the ValidationErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetValidationErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.ValidationErrors) {
		return nil, false
	}
	return o.ValidationErrors, true
}

// HasValidationErrors returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasValidationErrors() bool {
	if o != nil && !IsNil(o.ValidationErrors) {
		return true
	}

	return false
}

// SetValidationErrors gets a reference to the given []string and assigns it to the ValidationErrors field.
func (o *RemoteProcessGroupDTO) SetValidationErrors(v []string) {
	o.ValidationErrors = v
}

// GetTransmitting returns the Transmitting field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetTransmitting() bool {
	if o == nil || IsNil(o.Transmitting) {
		var ret bool
		return ret
	}
	return *o.Transmitting
}

// GetTransmittingOk returns a tuple with the Transmitting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetTransmittingOk() (*bool, bool) {
	if o == nil || IsNil(o.Transmitting) {
		return nil, false
	}
	return o.Transmitting, true
}

// HasTransmitting returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasTransmitting() bool {
	if o != nil && !IsNil(o.Transmitting) {
		return true
	}

	return false
}

// SetTransmitting gets a reference to the given bool and assigns it to the Transmitting field.
func (o *RemoteProcessGroupDTO) SetTransmitting(v bool) {
	o.Transmitting = &v
}

// GetInputPortCount returns the InputPortCount field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetInputPortCount() int32 {
	if o == nil || IsNil(o.InputPortCount) {
		var ret int32
		return ret
	}
	return *o.InputPortCount
}

// GetInputPortCountOk returns a tuple with the InputPortCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetInputPortCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InputPortCount) {
		return nil, false
	}
	return o.InputPortCount, true
}

// HasInputPortCount returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasInputPortCount() bool {
	if o != nil && !IsNil(o.InputPortCount) {
		return true
	}

	return false
}

// SetInputPortCount gets a reference to the given int32 and assigns it to the InputPortCount field.
func (o *RemoteProcessGroupDTO) SetInputPortCount(v int32) {
	o.InputPortCount = &v
}

// GetOutputPortCount returns the OutputPortCount field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetOutputPortCount() int32 {
	if o == nil || IsNil(o.OutputPortCount) {
		var ret int32
		return ret
	}
	return *o.OutputPortCount
}

// GetOutputPortCountOk returns a tuple with the OutputPortCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetOutputPortCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OutputPortCount) {
		return nil, false
	}
	return o.OutputPortCount, true
}

// HasOutputPortCount returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasOutputPortCount() bool {
	if o != nil && !IsNil(o.OutputPortCount) {
		return true
	}

	return false
}

// SetOutputPortCount gets a reference to the given int32 and assigns it to the OutputPortCount field.
func (o *RemoteProcessGroupDTO) SetOutputPortCount(v int32) {
	o.OutputPortCount = &v
}

// GetActiveRemoteInputPortCount returns the ActiveRemoteInputPortCount field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetActiveRemoteInputPortCount() int32 {
	if o == nil || IsNil(o.ActiveRemoteInputPortCount) {
		var ret int32
		return ret
	}
	return *o.ActiveRemoteInputPortCount
}

// GetActiveRemoteInputPortCountOk returns a tuple with the ActiveRemoteInputPortCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetActiveRemoteInputPortCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveRemoteInputPortCount) {
		return nil, false
	}
	return o.ActiveRemoteInputPortCount, true
}

// HasActiveRemoteInputPortCount returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasActiveRemoteInputPortCount() bool {
	if o != nil && !IsNil(o.ActiveRemoteInputPortCount) {
		return true
	}

	return false
}

// SetActiveRemoteInputPortCount gets a reference to the given int32 and assigns it to the ActiveRemoteInputPortCount field.
func (o *RemoteProcessGroupDTO) SetActiveRemoteInputPortCount(v int32) {
	o.ActiveRemoteInputPortCount = &v
}

// GetInactiveRemoteInputPortCount returns the InactiveRemoteInputPortCount field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetInactiveRemoteInputPortCount() int32 {
	if o == nil || IsNil(o.InactiveRemoteInputPortCount) {
		var ret int32
		return ret
	}
	return *o.InactiveRemoteInputPortCount
}

// GetInactiveRemoteInputPortCountOk returns a tuple with the InactiveRemoteInputPortCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetInactiveRemoteInputPortCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InactiveRemoteInputPortCount) {
		return nil, false
	}
	return o.InactiveRemoteInputPortCount, true
}

// HasInactiveRemoteInputPortCount returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasInactiveRemoteInputPortCount() bool {
	if o != nil && !IsNil(o.InactiveRemoteInputPortCount) {
		return true
	}

	return false
}

// SetInactiveRemoteInputPortCount gets a reference to the given int32 and assigns it to the InactiveRemoteInputPortCount field.
func (o *RemoteProcessGroupDTO) SetInactiveRemoteInputPortCount(v int32) {
	o.InactiveRemoteInputPortCount = &v
}

// GetActiveRemoteOutputPortCount returns the ActiveRemoteOutputPortCount field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetActiveRemoteOutputPortCount() int32 {
	if o == nil || IsNil(o.ActiveRemoteOutputPortCount) {
		var ret int32
		return ret
	}
	return *o.ActiveRemoteOutputPortCount
}

// GetActiveRemoteOutputPortCountOk returns a tuple with the ActiveRemoteOutputPortCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetActiveRemoteOutputPortCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveRemoteOutputPortCount) {
		return nil, false
	}
	return o.ActiveRemoteOutputPortCount, true
}

// HasActiveRemoteOutputPortCount returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasActiveRemoteOutputPortCount() bool {
	if o != nil && !IsNil(o.ActiveRemoteOutputPortCount) {
		return true
	}

	return false
}

// SetActiveRemoteOutputPortCount gets a reference to the given int32 and assigns it to the ActiveRemoteOutputPortCount field.
func (o *RemoteProcessGroupDTO) SetActiveRemoteOutputPortCount(v int32) {
	o.ActiveRemoteOutputPortCount = &v
}

// GetInactiveRemoteOutputPortCount returns the InactiveRemoteOutputPortCount field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetInactiveRemoteOutputPortCount() int32 {
	if o == nil || IsNil(o.InactiveRemoteOutputPortCount) {
		var ret int32
		return ret
	}
	return *o.InactiveRemoteOutputPortCount
}

// GetInactiveRemoteOutputPortCountOk returns a tuple with the InactiveRemoteOutputPortCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetInactiveRemoteOutputPortCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InactiveRemoteOutputPortCount) {
		return nil, false
	}
	return o.InactiveRemoteOutputPortCount, true
}

// HasInactiveRemoteOutputPortCount returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasInactiveRemoteOutputPortCount() bool {
	if o != nil && !IsNil(o.InactiveRemoteOutputPortCount) {
		return true
	}

	return false
}

// SetInactiveRemoteOutputPortCount gets a reference to the given int32 and assigns it to the InactiveRemoteOutputPortCount field.
func (o *RemoteProcessGroupDTO) SetInactiveRemoteOutputPortCount(v int32) {
	o.InactiveRemoteOutputPortCount = &v
}

// GetFlowRefreshed returns the FlowRefreshed field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetFlowRefreshed() string {
	if o == nil || IsNil(o.FlowRefreshed) {
		var ret string
		return ret
	}
	return *o.FlowRefreshed
}

// GetFlowRefreshedOk returns a tuple with the FlowRefreshed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetFlowRefreshedOk() (*string, bool) {
	if o == nil || IsNil(o.FlowRefreshed) {
		return nil, false
	}
	return o.FlowRefreshed, true
}

// HasFlowRefreshed returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasFlowRefreshed() bool {
	if o != nil && !IsNil(o.FlowRefreshed) {
		return true
	}

	return false
}

// SetFlowRefreshed gets a reference to the given string and assigns it to the FlowRefreshed field.
func (o *RemoteProcessGroupDTO) SetFlowRefreshed(v string) {
	o.FlowRefreshed = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *RemoteProcessGroupDTO) GetContents() RemoteProcessGroupContentsDTO {
	if o == nil || IsNil(o.Contents) {
		var ret RemoteProcessGroupContentsDTO
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteProcessGroupDTO) GetContentsOk() (*RemoteProcessGroupContentsDTO, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *RemoteProcessGroupDTO) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given RemoteProcessGroupContentsDTO and assigns it to the Contents field.
func (o *RemoteProcessGroupDTO) SetContents(v RemoteProcessGroupContentsDTO) {
	o.Contents = &v
}

func (o RemoteProcessGroupDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteProcessGroupDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.VersionedComponentId) {
		toSerialize["versionedComponentId"] = o.VersionedComponentId
	}
	if !IsNil(o.ParentGroupId) {
		toSerialize["parentGroupId"] = o.ParentGroupId
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.TargetUri) {
		toSerialize["targetUri"] = o.TargetUri
	}
	if !IsNil(o.TargetUris) {
		toSerialize["targetUris"] = o.TargetUris
	}
	if !IsNil(o.TargetSecure) {
		toSerialize["targetSecure"] = o.TargetSecure
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.CommunicationsTimeout) {
		toSerialize["communicationsTimeout"] = o.CommunicationsTimeout
	}
	if !IsNil(o.YieldDuration) {
		toSerialize["yieldDuration"] = o.YieldDuration
	}
	if !IsNil(o.TransportProtocol) {
		toSerialize["transportProtocol"] = o.TransportProtocol
	}
	if !IsNil(o.LocalNetworkInterface) {
		toSerialize["localNetworkInterface"] = o.LocalNetworkInterface
	}
	if !IsNil(o.ProxyHost) {
		toSerialize["proxyHost"] = o.ProxyHost
	}
	if !IsNil(o.ProxyPort) {
		toSerialize["proxyPort"] = o.ProxyPort
	}
	if !IsNil(o.ProxyUser) {
		toSerialize["proxyUser"] = o.ProxyUser
	}
	if !IsNil(o.ProxyPassword) {
		toSerialize["proxyPassword"] = o.ProxyPassword
	}
	if !IsNil(o.AuthorizationIssues) {
		toSerialize["authorizationIssues"] = o.AuthorizationIssues
	}
	if !IsNil(o.ValidationErrors) {
		toSerialize["validationErrors"] = o.ValidationErrors
	}
	if !IsNil(o.Transmitting) {
		toSerialize["transmitting"] = o.Transmitting
	}
	if !IsNil(o.InputPortCount) {
		toSerialize["inputPortCount"] = o.InputPortCount
	}
	if !IsNil(o.OutputPortCount) {
		toSerialize["outputPortCount"] = o.OutputPortCount
	}
	if !IsNil(o.ActiveRemoteInputPortCount) {
		toSerialize["activeRemoteInputPortCount"] = o.ActiveRemoteInputPortCount
	}
	if !IsNil(o.InactiveRemoteInputPortCount) {
		toSerialize["inactiveRemoteInputPortCount"] = o.InactiveRemoteInputPortCount
	}
	if !IsNil(o.ActiveRemoteOutputPortCount) {
		toSerialize["activeRemoteOutputPortCount"] = o.ActiveRemoteOutputPortCount
	}
	if !IsNil(o.InactiveRemoteOutputPortCount) {
		toSerialize["inactiveRemoteOutputPortCount"] = o.InactiveRemoteOutputPortCount
	}
	if !IsNil(o.FlowRefreshed) {
		toSerialize["flowRefreshed"] = o.FlowRefreshed
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	return toSerialize, nil
}

type NullableRemoteProcessGroupDTO struct {
	value *RemoteProcessGroupDTO
	isSet bool
}

func (v NullableRemoteProcessGroupDTO) Get() *RemoteProcessGroupDTO {
	return v.value
}

func (v *NullableRemoteProcessGroupDTO) Set(val *RemoteProcessGroupDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteProcessGroupDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteProcessGroupDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteProcessGroupDTO(val *RemoteProcessGroupDTO) *NullableRemoteProcessGroupDTO {
	return &NullableRemoteProcessGroupDTO{value: val, isSet: true}
}

func (v NullableRemoteProcessGroupDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteProcessGroupDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



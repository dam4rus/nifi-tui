/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the ParameterContextUpdateEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterContextUpdateEntity{}

// ParameterContextUpdateEntity struct for ParameterContextUpdateEntity
type ParameterContextUpdateEntity struct {
	ParameterContextRevision *RevisionDTO `json:"parameterContextRevision,omitempty"`
	ParameterContext *ParameterContextDTO `json:"parameterContext,omitempty"`
	// The components that are referenced by the update.
	ReferencingComponents []AffectedComponentEntity `json:"referencingComponents,omitempty"`
}

// NewParameterContextUpdateEntity instantiates a new ParameterContextUpdateEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterContextUpdateEntity() *ParameterContextUpdateEntity {
	this := ParameterContextUpdateEntity{}
	return &this
}

// NewParameterContextUpdateEntityWithDefaults instantiates a new ParameterContextUpdateEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterContextUpdateEntityWithDefaults() *ParameterContextUpdateEntity {
	this := ParameterContextUpdateEntity{}
	return &this
}

// GetParameterContextRevision returns the ParameterContextRevision field value if set, zero value otherwise.
func (o *ParameterContextUpdateEntity) GetParameterContextRevision() RevisionDTO {
	if o == nil || IsNil(o.ParameterContextRevision) {
		var ret RevisionDTO
		return ret
	}
	return *o.ParameterContextRevision
}

// GetParameterContextRevisionOk returns a tuple with the ParameterContextRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextUpdateEntity) GetParameterContextRevisionOk() (*RevisionDTO, bool) {
	if o == nil || IsNil(o.ParameterContextRevision) {
		return nil, false
	}
	return o.ParameterContextRevision, true
}

// HasParameterContextRevision returns a boolean if a field has been set.
func (o *ParameterContextUpdateEntity) HasParameterContextRevision() bool {
	if o != nil && !IsNil(o.ParameterContextRevision) {
		return true
	}

	return false
}

// SetParameterContextRevision gets a reference to the given RevisionDTO and assigns it to the ParameterContextRevision field.
func (o *ParameterContextUpdateEntity) SetParameterContextRevision(v RevisionDTO) {
	o.ParameterContextRevision = &v
}

// GetParameterContext returns the ParameterContext field value if set, zero value otherwise.
func (o *ParameterContextUpdateEntity) GetParameterContext() ParameterContextDTO {
	if o == nil || IsNil(o.ParameterContext) {
		var ret ParameterContextDTO
		return ret
	}
	return *o.ParameterContext
}

// GetParameterContextOk returns a tuple with the ParameterContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextUpdateEntity) GetParameterContextOk() (*ParameterContextDTO, bool) {
	if o == nil || IsNil(o.ParameterContext) {
		return nil, false
	}
	return o.ParameterContext, true
}

// HasParameterContext returns a boolean if a field has been set.
func (o *ParameterContextUpdateEntity) HasParameterContext() bool {
	if o != nil && !IsNil(o.ParameterContext) {
		return true
	}

	return false
}

// SetParameterContext gets a reference to the given ParameterContextDTO and assigns it to the ParameterContext field.
func (o *ParameterContextUpdateEntity) SetParameterContext(v ParameterContextDTO) {
	o.ParameterContext = &v
}

// GetReferencingComponents returns the ReferencingComponents field value if set, zero value otherwise.
func (o *ParameterContextUpdateEntity) GetReferencingComponents() []AffectedComponentEntity {
	if o == nil || IsNil(o.ReferencingComponents) {
		var ret []AffectedComponentEntity
		return ret
	}
	return o.ReferencingComponents
}

// GetReferencingComponentsOk returns a tuple with the ReferencingComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterContextUpdateEntity) GetReferencingComponentsOk() ([]AffectedComponentEntity, bool) {
	if o == nil || IsNil(o.ReferencingComponents) {
		return nil, false
	}
	return o.ReferencingComponents, true
}

// HasReferencingComponents returns a boolean if a field has been set.
func (o *ParameterContextUpdateEntity) HasReferencingComponents() bool {
	if o != nil && !IsNil(o.ReferencingComponents) {
		return true
	}

	return false
}

// SetReferencingComponents gets a reference to the given []AffectedComponentEntity and assigns it to the ReferencingComponents field.
func (o *ParameterContextUpdateEntity) SetReferencingComponents(v []AffectedComponentEntity) {
	o.ReferencingComponents = v
}

func (o ParameterContextUpdateEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterContextUpdateEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParameterContextRevision) {
		toSerialize["parameterContextRevision"] = o.ParameterContextRevision
	}
	if !IsNil(o.ParameterContext) {
		toSerialize["parameterContext"] = o.ParameterContext
	}
	if !IsNil(o.ReferencingComponents) {
		toSerialize["referencingComponents"] = o.ReferencingComponents
	}
	return toSerialize, nil
}

type NullableParameterContextUpdateEntity struct {
	value *ParameterContextUpdateEntity
	isSet bool
}

func (v NullableParameterContextUpdateEntity) Get() *ParameterContextUpdateEntity {
	return v.value
}

func (v *NullableParameterContextUpdateEntity) Set(val *ParameterContextUpdateEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterContextUpdateEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterContextUpdateEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterContextUpdateEntity(val *ParameterContextUpdateEntity) *NullableParameterContextUpdateEntity {
	return &NullableParameterContextUpdateEntity{value: val, isSet: true}
}

func (v NullableParameterContextUpdateEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterContextUpdateEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the SystemResourceConsideration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemResourceConsideration{}

// SystemResourceConsideration struct for SystemResourceConsideration
type SystemResourceConsideration struct {
	// The resource to consider
	Resource *string `json:"resource,omitempty"`
	// The description of how the resource is affected
	Description *string `json:"description,omitempty"`
}

// NewSystemResourceConsideration instantiates a new SystemResourceConsideration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemResourceConsideration() *SystemResourceConsideration {
	this := SystemResourceConsideration{}
	return &this
}

// NewSystemResourceConsiderationWithDefaults instantiates a new SystemResourceConsideration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemResourceConsiderationWithDefaults() *SystemResourceConsideration {
	this := SystemResourceConsideration{}
	return &this
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *SystemResourceConsideration) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemResourceConsideration) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *SystemResourceConsideration) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *SystemResourceConsideration) SetResource(v string) {
	o.Resource = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemResourceConsideration) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemResourceConsideration) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SystemResourceConsideration) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemResourceConsideration) SetDescription(v string) {
	o.Description = &v
}

func (o SystemResourceConsideration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemResourceConsideration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableSystemResourceConsideration struct {
	value *SystemResourceConsideration
	isSet bool
}

func (v NullableSystemResourceConsideration) Get() *SystemResourceConsideration {
	return v.value
}

func (v *NullableSystemResourceConsideration) Set(val *SystemResourceConsideration) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemResourceConsideration) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemResourceConsideration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemResourceConsideration(val *SystemResourceConsideration) *NullableSystemResourceConsideration {
	return &NullableSystemResourceConsideration{value: val, isSet: true}
}

func (v NullableSystemResourceConsideration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemResourceConsideration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the ParameterGroupConfigurationEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterGroupConfigurationEntity{}

// ParameterGroupConfigurationEntity struct for ParameterGroupConfigurationEntity
type ParameterGroupConfigurationEntity struct {
	// The name of the external parameter group to which the provided parameter names apply.
	GroupName *string `json:"groupName,omitempty"`
	// The name of the ParameterContext that receives the parameters in this group
	ParameterContextName *string `json:"parameterContextName,omitempty"`
	// All fetched parameter names that should be applied.
	ParameterSensitivities *map[string]string `json:"parameterSensitivities,omitempty"`
	// True if this group should be synchronized to a ParameterContext, including creating one if it does not exist.
	Synchronized *bool `json:"synchronized,omitempty"`
}

// NewParameterGroupConfigurationEntity instantiates a new ParameterGroupConfigurationEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterGroupConfigurationEntity() *ParameterGroupConfigurationEntity {
	this := ParameterGroupConfigurationEntity{}
	return &this
}

// NewParameterGroupConfigurationEntityWithDefaults instantiates a new ParameterGroupConfigurationEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterGroupConfigurationEntityWithDefaults() *ParameterGroupConfigurationEntity {
	this := ParameterGroupConfigurationEntity{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *ParameterGroupConfigurationEntity) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterGroupConfigurationEntity) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *ParameterGroupConfigurationEntity) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *ParameterGroupConfigurationEntity) SetGroupName(v string) {
	o.GroupName = &v
}

// GetParameterContextName returns the ParameterContextName field value if set, zero value otherwise.
func (o *ParameterGroupConfigurationEntity) GetParameterContextName() string {
	if o == nil || IsNil(o.ParameterContextName) {
		var ret string
		return ret
	}
	return *o.ParameterContextName
}

// GetParameterContextNameOk returns a tuple with the ParameterContextName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterGroupConfigurationEntity) GetParameterContextNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParameterContextName) {
		return nil, false
	}
	return o.ParameterContextName, true
}

// HasParameterContextName returns a boolean if a field has been set.
func (o *ParameterGroupConfigurationEntity) HasParameterContextName() bool {
	if o != nil && !IsNil(o.ParameterContextName) {
		return true
	}

	return false
}

// SetParameterContextName gets a reference to the given string and assigns it to the ParameterContextName field.
func (o *ParameterGroupConfigurationEntity) SetParameterContextName(v string) {
	o.ParameterContextName = &v
}

// GetParameterSensitivities returns the ParameterSensitivities field value if set, zero value otherwise.
func (o *ParameterGroupConfigurationEntity) GetParameterSensitivities() map[string]string {
	if o == nil || IsNil(o.ParameterSensitivities) {
		var ret map[string]string
		return ret
	}
	return *o.ParameterSensitivities
}

// GetParameterSensitivitiesOk returns a tuple with the ParameterSensitivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterGroupConfigurationEntity) GetParameterSensitivitiesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ParameterSensitivities) {
		return nil, false
	}
	return o.ParameterSensitivities, true
}

// HasParameterSensitivities returns a boolean if a field has been set.
func (o *ParameterGroupConfigurationEntity) HasParameterSensitivities() bool {
	if o != nil && !IsNil(o.ParameterSensitivities) {
		return true
	}

	return false
}

// SetParameterSensitivities gets a reference to the given map[string]string and assigns it to the ParameterSensitivities field.
func (o *ParameterGroupConfigurationEntity) SetParameterSensitivities(v map[string]string) {
	o.ParameterSensitivities = &v
}

// GetSynchronized returns the Synchronized field value if set, zero value otherwise.
func (o *ParameterGroupConfigurationEntity) GetSynchronized() bool {
	if o == nil || IsNil(o.Synchronized) {
		var ret bool
		return ret
	}
	return *o.Synchronized
}

// GetSynchronizedOk returns a tuple with the Synchronized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterGroupConfigurationEntity) GetSynchronizedOk() (*bool, bool) {
	if o == nil || IsNil(o.Synchronized) {
		return nil, false
	}
	return o.Synchronized, true
}

// HasSynchronized returns a boolean if a field has been set.
func (o *ParameterGroupConfigurationEntity) HasSynchronized() bool {
	if o != nil && !IsNil(o.Synchronized) {
		return true
	}

	return false
}

// SetSynchronized gets a reference to the given bool and assigns it to the Synchronized field.
func (o *ParameterGroupConfigurationEntity) SetSynchronized(v bool) {
	o.Synchronized = &v
}

func (o ParameterGroupConfigurationEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterGroupConfigurationEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.ParameterContextName) {
		toSerialize["parameterContextName"] = o.ParameterContextName
	}
	if !IsNil(o.ParameterSensitivities) {
		toSerialize["parameterSensitivities"] = o.ParameterSensitivities
	}
	if !IsNil(o.Synchronized) {
		toSerialize["synchronized"] = o.Synchronized
	}
	return toSerialize, nil
}

type NullableParameterGroupConfigurationEntity struct {
	value *ParameterGroupConfigurationEntity
	isSet bool
}

func (v NullableParameterGroupConfigurationEntity) Get() *ParameterGroupConfigurationEntity {
	return v.value
}

func (v *NullableParameterGroupConfigurationEntity) Set(val *ParameterGroupConfigurationEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterGroupConfigurationEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterGroupConfigurationEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterGroupConfigurationEntity(val *ParameterGroupConfigurationEntity) *NullableParameterGroupConfigurationEntity {
	return &NullableParameterGroupConfigurationEntity{value: val, isSet: true}
}

func (v NullableParameterGroupConfigurationEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterGroupConfigurationEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



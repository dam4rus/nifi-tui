/*
NiFi Rest API

The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

API version: 2.0.0
Contact: dev@nifi.apache.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nifiapi

import (
	"encoding/json"
)

// checks if the RegisteredFlowSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisteredFlowSnapshot{}

// RegisteredFlowSnapshot struct for RegisteredFlowSnapshot
type RegisteredFlowSnapshot struct {
	SnapshotMetadata *RegisteredFlowSnapshotMetadata `json:"snapshotMetadata,omitempty"`
	Flow *RegisteredFlow `json:"flow,omitempty"`
	Bucket *FlowRegistryBucket `json:"bucket,omitempty"`
	FlowContents *VersionedProcessGroup `json:"flowContents,omitempty"`
	ExternalControllerServices *map[string]ExternalControllerServiceReference `json:"externalControllerServices,omitempty"`
	ParameterContexts *map[string]VersionedParameterContext `json:"parameterContexts,omitempty"`
	FlowEncodingVersion *string `json:"flowEncodingVersion,omitempty"`
	ParameterProviders *map[string]ParameterProviderReference `json:"parameterProviders,omitempty"`
	Latest *bool `json:"latest,omitempty"`
}

// NewRegisteredFlowSnapshot instantiates a new RegisteredFlowSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisteredFlowSnapshot() *RegisteredFlowSnapshot {
	this := RegisteredFlowSnapshot{}
	return &this
}

// NewRegisteredFlowSnapshotWithDefaults instantiates a new RegisteredFlowSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisteredFlowSnapshotWithDefaults() *RegisteredFlowSnapshot {
	this := RegisteredFlowSnapshot{}
	return &this
}

// GetSnapshotMetadata returns the SnapshotMetadata field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetSnapshotMetadata() RegisteredFlowSnapshotMetadata {
	if o == nil || IsNil(o.SnapshotMetadata) {
		var ret RegisteredFlowSnapshotMetadata
		return ret
	}
	return *o.SnapshotMetadata
}

// GetSnapshotMetadataOk returns a tuple with the SnapshotMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetSnapshotMetadataOk() (*RegisteredFlowSnapshotMetadata, bool) {
	if o == nil || IsNil(o.SnapshotMetadata) {
		return nil, false
	}
	return o.SnapshotMetadata, true
}

// HasSnapshotMetadata returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasSnapshotMetadata() bool {
	if o != nil && !IsNil(o.SnapshotMetadata) {
		return true
	}

	return false
}

// SetSnapshotMetadata gets a reference to the given RegisteredFlowSnapshotMetadata and assigns it to the SnapshotMetadata field.
func (o *RegisteredFlowSnapshot) SetSnapshotMetadata(v RegisteredFlowSnapshotMetadata) {
	o.SnapshotMetadata = &v
}

// GetFlow returns the Flow field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetFlow() RegisteredFlow {
	if o == nil || IsNil(o.Flow) {
		var ret RegisteredFlow
		return ret
	}
	return *o.Flow
}

// GetFlowOk returns a tuple with the Flow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetFlowOk() (*RegisteredFlow, bool) {
	if o == nil || IsNil(o.Flow) {
		return nil, false
	}
	return o.Flow, true
}

// HasFlow returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasFlow() bool {
	if o != nil && !IsNil(o.Flow) {
		return true
	}

	return false
}

// SetFlow gets a reference to the given RegisteredFlow and assigns it to the Flow field.
func (o *RegisteredFlowSnapshot) SetFlow(v RegisteredFlow) {
	o.Flow = &v
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetBucket() FlowRegistryBucket {
	if o == nil || IsNil(o.Bucket) {
		var ret FlowRegistryBucket
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetBucketOk() (*FlowRegistryBucket, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given FlowRegistryBucket and assigns it to the Bucket field.
func (o *RegisteredFlowSnapshot) SetBucket(v FlowRegistryBucket) {
	o.Bucket = &v
}

// GetFlowContents returns the FlowContents field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetFlowContents() VersionedProcessGroup {
	if o == nil || IsNil(o.FlowContents) {
		var ret VersionedProcessGroup
		return ret
	}
	return *o.FlowContents
}

// GetFlowContentsOk returns a tuple with the FlowContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetFlowContentsOk() (*VersionedProcessGroup, bool) {
	if o == nil || IsNil(o.FlowContents) {
		return nil, false
	}
	return o.FlowContents, true
}

// HasFlowContents returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasFlowContents() bool {
	if o != nil && !IsNil(o.FlowContents) {
		return true
	}

	return false
}

// SetFlowContents gets a reference to the given VersionedProcessGroup and assigns it to the FlowContents field.
func (o *RegisteredFlowSnapshot) SetFlowContents(v VersionedProcessGroup) {
	o.FlowContents = &v
}

// GetExternalControllerServices returns the ExternalControllerServices field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetExternalControllerServices() map[string]ExternalControllerServiceReference {
	if o == nil || IsNil(o.ExternalControllerServices) {
		var ret map[string]ExternalControllerServiceReference
		return ret
	}
	return *o.ExternalControllerServices
}

// GetExternalControllerServicesOk returns a tuple with the ExternalControllerServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetExternalControllerServicesOk() (*map[string]ExternalControllerServiceReference, bool) {
	if o == nil || IsNil(o.ExternalControllerServices) {
		return nil, false
	}
	return o.ExternalControllerServices, true
}

// HasExternalControllerServices returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasExternalControllerServices() bool {
	if o != nil && !IsNil(o.ExternalControllerServices) {
		return true
	}

	return false
}

// SetExternalControllerServices gets a reference to the given map[string]ExternalControllerServiceReference and assigns it to the ExternalControllerServices field.
func (o *RegisteredFlowSnapshot) SetExternalControllerServices(v map[string]ExternalControllerServiceReference) {
	o.ExternalControllerServices = &v
}

// GetParameterContexts returns the ParameterContexts field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetParameterContexts() map[string]VersionedParameterContext {
	if o == nil || IsNil(o.ParameterContexts) {
		var ret map[string]VersionedParameterContext
		return ret
	}
	return *o.ParameterContexts
}

// GetParameterContextsOk returns a tuple with the ParameterContexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetParameterContextsOk() (*map[string]VersionedParameterContext, bool) {
	if o == nil || IsNil(o.ParameterContexts) {
		return nil, false
	}
	return o.ParameterContexts, true
}

// HasParameterContexts returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasParameterContexts() bool {
	if o != nil && !IsNil(o.ParameterContexts) {
		return true
	}

	return false
}

// SetParameterContexts gets a reference to the given map[string]VersionedParameterContext and assigns it to the ParameterContexts field.
func (o *RegisteredFlowSnapshot) SetParameterContexts(v map[string]VersionedParameterContext) {
	o.ParameterContexts = &v
}

// GetFlowEncodingVersion returns the FlowEncodingVersion field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetFlowEncodingVersion() string {
	if o == nil || IsNil(o.FlowEncodingVersion) {
		var ret string
		return ret
	}
	return *o.FlowEncodingVersion
}

// GetFlowEncodingVersionOk returns a tuple with the FlowEncodingVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetFlowEncodingVersionOk() (*string, bool) {
	if o == nil || IsNil(o.FlowEncodingVersion) {
		return nil, false
	}
	return o.FlowEncodingVersion, true
}

// HasFlowEncodingVersion returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasFlowEncodingVersion() bool {
	if o != nil && !IsNil(o.FlowEncodingVersion) {
		return true
	}

	return false
}

// SetFlowEncodingVersion gets a reference to the given string and assigns it to the FlowEncodingVersion field.
func (o *RegisteredFlowSnapshot) SetFlowEncodingVersion(v string) {
	o.FlowEncodingVersion = &v
}

// GetParameterProviders returns the ParameterProviders field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetParameterProviders() map[string]ParameterProviderReference {
	if o == nil || IsNil(o.ParameterProviders) {
		var ret map[string]ParameterProviderReference
		return ret
	}
	return *o.ParameterProviders
}

// GetParameterProvidersOk returns a tuple with the ParameterProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetParameterProvidersOk() (*map[string]ParameterProviderReference, bool) {
	if o == nil || IsNil(o.ParameterProviders) {
		return nil, false
	}
	return o.ParameterProviders, true
}

// HasParameterProviders returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasParameterProviders() bool {
	if o != nil && !IsNil(o.ParameterProviders) {
		return true
	}

	return false
}

// SetParameterProviders gets a reference to the given map[string]ParameterProviderReference and assigns it to the ParameterProviders field.
func (o *RegisteredFlowSnapshot) SetParameterProviders(v map[string]ParameterProviderReference) {
	o.ParameterProviders = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *RegisteredFlowSnapshot) GetLatest() bool {
	if o == nil || IsNil(o.Latest) {
		var ret bool
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredFlowSnapshot) GetLatestOk() (*bool, bool) {
	if o == nil || IsNil(o.Latest) {
		return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *RegisteredFlowSnapshot) HasLatest() bool {
	if o != nil && !IsNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given bool and assigns it to the Latest field.
func (o *RegisteredFlowSnapshot) SetLatest(v bool) {
	o.Latest = &v
}

func (o RegisteredFlowSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisteredFlowSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SnapshotMetadata) {
		toSerialize["snapshotMetadata"] = o.SnapshotMetadata
	}
	if !IsNil(o.Flow) {
		toSerialize["flow"] = o.Flow
	}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !IsNil(o.FlowContents) {
		toSerialize["flowContents"] = o.FlowContents
	}
	if !IsNil(o.ExternalControllerServices) {
		toSerialize["externalControllerServices"] = o.ExternalControllerServices
	}
	if !IsNil(o.ParameterContexts) {
		toSerialize["parameterContexts"] = o.ParameterContexts
	}
	if !IsNil(o.FlowEncodingVersion) {
		toSerialize["flowEncodingVersion"] = o.FlowEncodingVersion
	}
	if !IsNil(o.ParameterProviders) {
		toSerialize["parameterProviders"] = o.ParameterProviders
	}
	if !IsNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	return toSerialize, nil
}

type NullableRegisteredFlowSnapshot struct {
	value *RegisteredFlowSnapshot
	isSet bool
}

func (v NullableRegisteredFlowSnapshot) Get() *RegisteredFlowSnapshot {
	return v.value
}

func (v *NullableRegisteredFlowSnapshot) Set(val *RegisteredFlowSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisteredFlowSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisteredFlowSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisteredFlowSnapshot(val *RegisteredFlowSnapshot) *NullableRegisteredFlowSnapshot {
	return &NullableRegisteredFlowSnapshot{value: val, isSet: true}
}

func (v NullableRegisteredFlowSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisteredFlowSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


